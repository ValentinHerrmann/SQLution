{"version":3,"file":"sql-ide-embedded.js","sources":["../src/client/compiler/lexer/Token.ts","../src/client/compiler/lexer/Lexer.ts","../src/client/main/gui/Formatter.ts","../src/client/main/gui/ThemeManager.ts","../src/client/compiler/parser/SQLTypes.ts","../src/client/compiler/parser/Parser.ts","../src/client/tools/StringTools.ts","../src/client/compiler/parser/SQLMethods.ts","../src/client/compiler/parser/SQLTable.ts","../src/client/compiler/parser/SymbolTable.ts","../src/client/compiler/parser/SymbolResolver.ts","../src/client/compiler/Compiler.ts","../src/client/compiler/parser/Module.ts","../src/client/compiler/parser/SemicolonAngel.ts","../src/client/main/gui/ActionManager.ts","../src/client/tools/HtmlTools.ts","../src/client/communication/AjaxHelper.ts","../src/client/workspace/WDatabase.ts","../src/client/communication/CacheManager.ts","../src/client/tools/TemplateUploader.ts","../src/client/tools/FileTool.ts","../src/client/communication/pushclient/PushClientStrategy.ts","../src/client/communication/pushclient/PushClientLongPollingStrategy.ts","../src/client/communication/pushclient/PushClientWebsocketStrategy.ts","../src/client/communication/pushclient/BasePushClientManager.ts","../src/client/communication/pushclient/PushClientManager.ts","../src/client/communication/NetworkManager.ts","../src/client/sqljs-worker/sqljsWorkerTools.ts","../__vite-browser-external","../src/client/sqljs-worker/sqljsWorkerSim.ts","../src/client/sqljs-worker/DatabaseTools.ts","../src/client/main/gui/DatabaseSettingsDialog.ts","../src/client/workspace/Workspace.ts","../src/client/main/gui/DatabaseExplorer.ts","../src/client/main/gui/MyCompletionItemProvider.ts","../src/client/main/gui/MySignatureHelpProvider.ts","../src/client/main/gui/MyHoverProvider.ts","../src/client/main/gui/MyCodeActionProvider.ts","../src/client/main/gui/MyReferenceProvider.ts","../src/client/main/gui/VSCSql.ts","../src/client/main/gui/Helper.ts","../src/client/main/gui/Editor.ts","../src/client/main/gui/HistoryViewer.ts","../src/client/compiler/parser/StatementCleaner.ts","../src/client/tools/MySqlImporter.ts","../src/client/tools/DatabaseImportExport.ts","../src/client/main/gui/NewDatabaseDialog.ts","../src/client/main/gui/MainMenu.ts","../src/client/main/gui/ProgramControlButtons.ts","../src/client/main/gui/Accordion.ts","../src/client/main/gui/DistributeToStudentsDialog.ts","../src/client/main/gui/ProjectExplorer.ts","../src/client/main/gui/ResultsetPresenter.ts","../src/client/main/gui/RightDiv.ts","../src/client/main/gui/Sliders.ts","../src/client/communication/Data.ts","../src/client/main/gui/TeacherExplorer.ts","../src/client/main/gui/ViewModeController.ts","../src/client/main/gui/WaitOverlay.ts","../src/client/main/AutoLogout.ts","../src/client/main/gui/Dialog.ts","../src/client/main/gui/UserMenu.ts","../src/client/main/Login.ts","../src/client/communication/NewNotifier.ts","../src/client/tools/HttpTools.ts","../src/client/main/Main.ts","../src/client/main/gui/ErrorManager.ts","../src/client/main/gui/HomeworkManager.ts","../src/client/main/gui/BottomDiv.ts","../src/client/tools/DatabaseLoader.ts","../src/client/embedded/EmbeddedFileExplorer.ts","../src/client/embedded/EmbeddedIndexedDB.ts","../src/client/embedded/EmbeddedInterface.ts","../src/client/embedded/EmbeddedSlider.ts","../src/client/embedded/WriteQueryManager.ts","../include/graphics/grid.svg","../src/client/embedded/MainEmbedded.ts","../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordSchema,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n    keywordUnion,\r\n    keywordView,\r\n    keywordEnum,\r\n    keywordBetween,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordSchema]: \"schema\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n    [TokenType.keywordUnion]: \"union\",\r\n    [TokenType.keywordView]: \"view\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordBetween]: \"between\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n    \"union\": TokenType.keywordUnion,\r\n    \"view\": TokenType.keywordView,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"between\": TokenType.keywordBetween,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport * as monaco from 'monaco-editor'\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.input = this.input.replace(/{[^}]+}(\\[[^\\]]+\\])?/g, \"0\");\r\n        \r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    if(this.nextChar == 'u'){       // Unicode escape sequences (for OpenOffice)\r\n                        let hex: string = \"\";\r\n                        this.next(); // skip \\\r\n                        this.next(); // skip u\r\n                        while (\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4) {\r\n                            hex += this.currentChar;\r\n                            if(hex.length < 4) this.next();\r\n                        }\r\n                        if (hex.length < 4) {\r\n                            this.pushError('Unbekanntes Unicode-Zeichen: u' + hex, 1 + hex.length);\r\n                        } else {\r\n                            char = String.fromCodePoint(parseInt(hex, 16));\r\n                        }\r\n                    } else {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    }\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\nimport * as monaco from 'monaco-editor'\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import * as monaco from 'monaco-editor'\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n                // highlight statements\r\n                \"--highlightStatementGreen-color\": \"#015a0165\",\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n                // highlight statements\r\n                \"--highlightStatementGreen-color\": \"#015a0120\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: any[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: any[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n    abstract getSQLiteType(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return this.toString();\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        if(bt2 instanceof SQLTextEnumType) bt2 = SQLBaseType.getBaseType('text');\r\n        if(bt2 instanceof SQLNumberEnumType) bt2 = SQLBaseType.getBaseType('double');\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        if(bt2 instanceof SQLTextEnumType) bt2 = SQLBaseType.getBaseType('text');\r\n        if(bt2 instanceof SQLNumberEnumType) bt2 = SQLBaseType.getBaseType('double');\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n            case TokenType.modulo:\r\n                return value1 % value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class SQLNumberEnumType extends SQLBaseType {\r\n    \r\n    isInteger: boolean = true;\r\n    numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\n    comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\n\r\n    constructor(public values: number[]){\r\n        super(\"NumberEnum\", [], \r\n        (ci, pv) => `check(${ci} in (${values.join(', ')}))`,\r\n        (v: string, pv) => v,\r\n        [\"decimal\", \"integer\", \"double\", \"float\"]\r\n        )\r\n\r\n        for(let v of values){\r\n            if(Math.abs(Math.round(v) - v) > 0.00000001) this.isInteger = false;\r\n        }\r\n\r\n        this.name = this.isInteger ? \"integerEnum\" : \"floatEnum\";\r\n    }\r\n    \r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n        if(this.numericBinaryOperators.indexOf(operator) >= 0){\r\n            return this.isInteger ? SQLBaseType.getBaseType('integer') : SQLBaseType.getBaseType('double');\r\n        } else {\r\n            return SQLBaseType.getBaseType('boolean');\r\n        }\r\n    }\r\n    \r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return null;\r\n    }\r\n    \r\n    getBinaryResult(operator: TokenType, value1: any, value2: any) {\r\n        return value1 + value2;\r\n    }\r\n    \r\n    toString(): string {\r\n        return \"enum (\" + this.values.join(\", \") + \")\";\r\n    }\r\n    \r\n    getBaseTypeName(): string {\r\n        return \"enum\";\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return this.isInteger ? \"integerEnum\" : \"realEnum\";\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class SQLTextEnumType extends SQLBaseType {\r\n    \r\n    constructor(public values: string[]){\r\n        super(\"textEnum\", [], \r\n        (ci, pv) => `check(${ci} in (${values.map(v => \"'\" + v + \"'\").join(', ')}))`,\r\n        (v: string, pv) => v,\r\n        [\"text\", \"varchar\", \"char\"]\r\n        )\r\n    }\r\n    \r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n        return operator == TokenType.concatenation ? SQLBaseType.getBaseType('text') : null;\r\n    }\r\n    \r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return null;\r\n    }\r\n    \r\n    getBinaryResult(operator: TokenType, value1: any, value2: any) {\r\n        return value1 + value2;\r\n    }\r\n    \r\n    toString(): string {\r\n        return \"enum (\" + this.values.join(\", \") + \")\";\r\n    }\r\n    \r\n    getBaseTypeName(): string {\r\n        return \"enum\";\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return \"textEnum\";\r\n    }\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return this.baseType.getSQLiteType();\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\", \"floatEnum\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\", \"integerEnum\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nbooleanType.addBinaryOperation(TokenType.equal, booleanType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import * as monaco from 'monaco-editor';\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { AlterTableNode, ASTNode, BracketsNode, ColumnNode, ConstantNode, CreateTableColumnNode, CreateTableNode, CreateViewNode, DeleteNode, DropTableNode, ForeignKeyInfo, GroupByNode, IdentifierNode, InsertNode, LimitNode, ListNode, OmittedStatementNode, OrderByNode, SelectNode, TableNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { SQLBaseType, SQLNumberEnumType, SQLTextEnumType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string,\r\n    resultTypes: SQLType[]\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.keywordBetween],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"create view\", \"delete from\", \"alter table\", \"drop table\", \"drop view\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            // let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                // quickFix = {\r\n                //     title: 'Strichpunkt hier einfügen',\r\n                //     editsProvider: (uri) => {\r\n                //         return [{\r\n                //             resource: uri,\r\n                //             edit: {\r\n                //                 range: {\r\n                //                     startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                //                     message: \"\",\r\n                //                     severity: monaco.MarkerSeverity.Error\r\n                //                 },\r\n                //                 text: \";\"\r\n                //             }\r\n                //         }\r\n                //         ];\r\n                //     }\r\n                // }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        let found = token.indexOf(this.tt) >= 0;\r\n        if(found && skip) this.nextToken;\r\n        return found;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false,\r\n                    resultTypes: []\r\n                });\r\n            }\r\n            \r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabaseOrView();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTableOrView();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n\r\n        // SET DATABASE Collation \"German\"  ( -> OpenOffice)\r\n        if(this.comesToken(TokenType.keywordDatabase)){\r\n            this.nextToken();\r\n        } \r\n        this.expect(TokenType.identifier, true);\r\n        this.comesToken(TokenType.equal, true);   // skip = if present\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n                default:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value + '_idx';\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTableOrView(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Drop\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect([TokenType.keywordTable, TokenType.keywordView], true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\", \"view\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabaseOrView(): CreateTableNode | OmittedStatementNode | CreateViewNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            case TokenType.keywordView:\r\n                return this.parseCreateView();\r\n            case TokenType.keywordSchema:\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateView(): CreateViewNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n        this.nextToken(); // skip \"view\"\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            return null;\r\n        }\r\n\r\n        identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        if (this.comesToken(TokenType.leftBracket, true)) {\r\n\r\n            do {\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    columnIdentifiers.push(<string>this.cct.value)\r\n                }\r\n                this.nextToken();\r\n            } while (this.comesToken(TokenType.comma, true))\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordAs, true)) {\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(2), false, false, [\"as\"]);\r\n\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordSelect, false)) {\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(2), false, false, [\"select\"]);\r\n            return null;\r\n        }\r\n\r\n        let selectStatement = this.parseSelect();\r\n\r\n        let node: CreateViewNode = {\r\n            type: TokenType.keywordView,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            ifNotExists: ifNotExists,\r\n            columnIdentifierList: columnIdentifiers,\r\n            selectStatement: selectStatement\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordKey:   //   KEY `CountryCode` (`CountryCode`),\r\n                    this.nextToken();\r\n                    this.comesToken(TokenType.identifier, true);\r\n                    this.comesToken(TokenType.leftBracket, true);\r\n                    this.comesToken(TokenType.identifier, true);\r\n                    this.comesToken(TokenType.rightBracket, true);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    identifierMap: { [key: string]: string } = { 'year': 'int', 'binary': 'varchar', 'varbinary': 'varchar' };\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.keywordEnum], false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let type: SQLBaseType;\r\n\r\n        if (this.cct.tt == TokenType.keywordEnum) {\r\n            this.nextToken();\r\n\r\n            if(this.expect(TokenType.leftBracket, true)){\r\n    \r\n                let constants: ConstantNode[] = [];\r\n                //@ts-ignore\r\n                while(!this.comesToken(TokenType.rightBracket, true) && !this.isEnd()){\r\n    \r\n                    let constant = this.parseConstant();\r\n                    if(constant != null) constants.push(constant);\r\n    \r\n                    if(this.comesToken(TokenType.comma)) this.nextToken();\r\n    \r\n                }\r\n    \r\n                if(constants.length > 0){\r\n                    switch(constants[0].constantType){\r\n                        case TokenType.integerConstant:\r\n                        case TokenType.floatingPointConstant:\r\n                            type = new SQLNumberEnumType(constants.map(c => c.constant));\r\n                            break;\r\n                        default:\r\n                            type = new SQLTextEnumType(constants.map(c => \"\" + c.constant));\r\n                            break;\r\n                    }\r\n                } else {\r\n                    type = new SQLTextEnumType([]);\r\n                }\r\n    \r\n                node.baseType = type;\r\n\r\n            } \r\n\r\n\r\n        } else {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPos = this.getCurrentPosition()\r\n\r\n            let mappedIdentifier: string = this.identifierMap[identifier.toLocaleLowerCase()];\r\n\r\n            if (mappedIdentifier != null) {\r\n                identifier = mappedIdentifier;\r\n            }\r\n\r\n            type = SQLBaseType.getBaseType(identifier);\r\n            if (type == null) {\r\n                this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n            }\r\n            node.baseType = type;\r\n            this.nextToken();\r\n\r\n            if (this.tt == TokenType.leftBracket) {\r\n                this.nextToken();\r\n                node.parameters = [];\r\n                //@ts-ignore\r\n                while (this.tt == TokenType.integerConstant) {\r\n                    node.parameters.push(<number>this.cct.value);\r\n                    this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.tt != TokenType.comma) break;\r\n                    this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.tt != TokenType.integerConstant) {\r\n                        this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                    this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n                }\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n            }\r\n\r\n            if (identifier != null && node.parameters == null) {\r\n                switch (identifier.toLocaleLowerCase()) {\r\n                    case \"char\":\r\n                        node.parameters = [1];\r\n                        break;\r\n                    case \"varchar\":\r\n                        node.parameters = [1];\r\n                        this.pushError(\"Hinter dem Datentyp varchar wird zwingend eine Längenangabe in Klammern erwaretet, also z.B. varchar(30)\", \"error\", identifierPos)\r\n                        break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n        if (this.tt != TokenType.comma) {\r\n            this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n        }\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        if (!this.comesToken(TokenType.comma)) {\r\n                            this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                        }\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\" && node.defaultValue.toLowerCase() != 'null') {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition = startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if (this.getCurrentPosition().line <= rightBracketPosition.line + 1) {\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else {\r\n                        let lv = (this.cct.value + \"\").toLocaleLowerCase();\r\n                        if ([\"date\", \"_binary\"].indexOf(lv) >= 0) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTableEndPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n\r\n            // parse where...\r\n\r\n            let whereKeywordArray = [\"like\", \"union\"];\r\n            if (this.tt == TokenType.keywordWhere) {\r\n                let position = this.getCurrentPosition();\r\n                let whereStart = this.getCurrentPosition();\r\n                this.nextToken();\r\n                node.whereNode = this.parseTerm();\r\n                this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n                // if (node.whereNode != null) node.whereNode.position = position;\r\n            } else {\r\n                fromListKeywordArray.push(\"where\");\r\n            }\r\n\r\n            let groupKeywordArray = [];\r\n            if (this.tt == TokenType.keywordGroup) {\r\n                let groupStart = this.getCurrentPosition();\r\n                node.groupByNode = this.parseGroupBy();\r\n                this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n            } else {\r\n                whereKeywordArray.push(\"group by\");\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOrder) {\r\n                let orderStart = this.getCurrentPosition();\r\n                node.orderByNode = this.parseOrderBy();\r\n                this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n            } else {\r\n                whereKeywordArray.push(\"order by\");\r\n                groupKeywordArray.push(\"order by\");\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordLimit) {\r\n                node.limitNode = this.parseLimit();\r\n            }\r\n\r\n            node.symbolTableEndPosition = this.getCurrentPosition();\r\n\r\n            if (this.comesToken(TokenType.keywordUnion, true)) {\r\n                if (this.expect(TokenType.keywordSelect, false)) {\r\n                    node.union = this.parseSelect();\r\n                }\r\n            } else {\r\n                if (hasFrom && node.fromNode != null) {\r\n                    fromListKeywordArray.push(\"union\");\r\n                }\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                this.nextToken();\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            let comesKeywordAs: boolean = (this.tt == TokenType.keywordAs);\r\n            if (comesKeywordAs || this.tt == TokenType.identifier) {\r\n                if (comesKeywordAs) this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs) || this.comesToken(TokenType.identifier)) {\r\n                        this.skip(TokenType.keywordAs);\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if(this.tt == TokenType.keywordBetween){\r\n            return this.parseBetween(left);\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n    \r\n    parseBetween(left: TermNode): TermNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"between\"\r\n        let secondOperand = this.parseTermBinary(2);\r\n        if(this.expect(TokenType.keywordAnd, true)){\r\n\r\n            let thirdOperand = this.parseTermBinary(2);\r\n\r\n            return {\r\n                type: TokenType.keywordBetween,\r\n                position: position,\r\n                firstOperand: left,\r\n                secondOperand: secondOperand, \r\n                thirdOperand: thirdOperand\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = this.position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n                \r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions,\r\n                        distinctBeforeParameters: parameters.distinctBeforeParameters\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[], distinctBeforeParameters: boolean } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        let distinctBeforeParameters = this.comesToken(TokenType.keywordDistinct, true);\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [], distinctBeforeParameters: distinctBeforeParameters };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions, distinctBeforeParameters: distinctBeforeParameters };\r\n\r\n    }\r\n\r\n    parseDotChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions,\r\n                        distinctBeforeParameters: parameters.distinctBeforeParameters\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"abs\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sin\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"cos\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"tan\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"max\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"max\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"max\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"min\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"min\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"min\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"concat\" ,\"text\", \"text\");\r\n        this.pushOneParameterMethod(\"upper\" ,\"text\", \"text\");\r\n        this.pushOneParameterMethod(\"lower\" ,\"text\", \"text\");\r\n        this.pushOneParameterMethod(\"length\" ,\"integer\", \"text\");\r\n        this.pushOneParameterMethod(\"month\" , \"integer\",\"date\");\r\n        this.pushOneParameterMethod(\"day\" , \"integer\",\"date\");\r\n        this.pushOneParameterMethod(\"year\" , \"integer\",\"date\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n\r\n        let strftimeMethod = new SQLMethod(\"strftime\", false, \"text\", [new SQLMethodParameter(\"formatstring\", \"text\"), new SQLMethodParameter(\"date\", \"date\")]);\r\n        strftimeMethod.acceptsStarParameter = true;\r\n        this.methods.push(strftimeMethod);\r\n\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","import { ColumnStructure, TableStructure } from \"../../sqljs-worker/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType, SQLTextEnumType, SQLNumberEnumType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType;\r\n        \r\n        if(baseTypeIdentifier.indexOf('Enum') >= 0){\r\n            switch(baseTypeIdentifier){\r\n                case \"textEnum\":\r\n                    type = new SQLTextEnumType(cs.enumValues);\r\n                    break;\r\n                case \"realEnum\":\r\n                    type = new SQLNumberEnumType(cs.enumValues.map(v => Number.parseFloat(v)));\r\n                    break;\r\n                case \"integerEnum\":\r\n                    type = new SQLNumberEnumType(cs.enumValues.map(v => Number.parseInt(v)));\r\n                    break;\r\n            }\r\n        } else {\r\n            type = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        }\r\n        \r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n    type: (\"table\"|\"view\");\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        table.type = ts.type;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../sqljs-worker/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { DatabaseTool } from \"../../sqljs-worker/DatabaseTools.js\";\r\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { AlterTableNode, BinaryOpNode, CreateTableNode, CreateViewNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode, statement.resultTypes);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordView:\r\n                    this.resolveCreateView(astNode);\r\n                    this.symbolTableStack.pop();\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if (positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode, resultTypes: SQLType[]): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.symbolTableEndPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                        resultTypes.push(column.type)\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                resultTypes.push(columnNode.term.sqlType);\r\n                \r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n        // TODO: group by, order by\r\n\r\n        if(selectNode.union != null){\r\n            this.symbolTableStack.pop();\r\n            let secondTable = this.resolveSelect(selectNode.union, []);\r\n            if(secondTable.columns.length != resultTable.columns.length){\r\n                this.pushError(\"Die select-Anweisungen links und rechts vom Schlüsselwort 'union' müssen dieselbe Anzahl von Spalten besitzen.\", \"error\", selectNode.symbolTableEndPosition);\r\n            }\r\n        }\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if (!node.ifExists) {\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null){\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        } else {\r\n            for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n                let ci = node.columnIdentifiers[i];\r\n                let ciPos = node.columnIdentifierPositions[i];\r\n                let value = node.values[i];\r\n    \r\n                if (ci == null) continue;\r\n                let column = table.columns.find(c => c.identifier == ci);\r\n    \r\n                if (column == null) {\r\n                    this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n                }\r\n    \r\n                if (value == null) continue;\r\n                let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n                symbolTable.storeTableSymbols(table);\r\n                this.resolveTerm(value);\r\n                this.symbolTableStack.pop();\r\n    \r\n            }\r\n    \r\n            if (node.whereNodeBegin != null) {\r\n                let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n    \r\n            if (node.whereNode != null) {\r\n                this.resolveTerm(node.whereNode);\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0,\r\n            type: \"table\"\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query, []);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n\r\n            case TokenType.keywordBetween:\r\n                let firstOperand = this.resolveTerm(node.firstOperand);\r\n                let secondOperand = this.resolveTerm(node.secondOperand);\r\n                let thirdOperand = this.resolveTerm(node.thirdOperand);\r\n\r\n                if(firstOperand == null || secondOperand == null || thirdOperand == null) return null;\r\n\r\n                if(!firstOperand.canCastTo(SQLBaseType.getBaseType(\"double\"))){\r\n                    this.pushError(\"Hier wird eine Zahl erwartet.\", \"error\", node.firstOperand.position);\r\n                    return null;\r\n                }                \r\n                if(!secondOperand.canCastTo(SQLBaseType.getBaseType(\"double\"))){\r\n                    this.pushError(\"Hier wird eine Zahl erwartet.\", \"error\", node.secondOperand.position);\r\n                    return null;\r\n                }                \r\n                if(!thirdOperand.canCastTo(SQLBaseType.getBaseType(\"double\"))){\r\n                    this.pushError(\"Hier wird eine Zahl erwartet.\", \"error\", node.thirdOperand.position);\r\n                }        \r\n                return SQLBaseType.getBaseType(\"boolean\");        \r\n                break;\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType;\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType1;\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node, []);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        if (node.identifier.toLocaleLowerCase() == 'concat') {\r\n            if(node.operands.length == 0){\r\n                this.pushError(\"Die Methode concat benötigt mindestens einen Parameter.\", \"error\", node.position);\r\n                return null;\r\n            }\r\n            let method = methods[0];\r\n            node.sqlType = method.returnType;\r\n\r\n            return node.sqlType;\r\n        } else {\r\n            let isCountMethod = node.identifier.toLocaleLowerCase() == \"count\";\r\n            if(!isCountMethod){\r\n                methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n            }\r\n            if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n                methods = methods.filter(m => m.acceptsStarParameter);\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n\r\n            if (methods.length == 0) {\r\n                this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n                return null;\r\n            }\r\n\r\n            for (let operand of node.operands) {\r\n                if (this.resolveTerm(operand) == null) {\r\n                    node.sqlType = methods[0].returnType;\r\n                    return node.sqlType;\r\n                }\r\n            }\r\n\r\n            for (let method of methods) {\r\n                let found = true;\r\n                for (let i = 0; i < method.parameters.length; i++) {\r\n                    let methodParameter = method.parameters[i];\r\n                    let operand = node.operands[i];\r\n                    if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                        found = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (found || isCountMethod) {\r\n                    node.sqlType = method.returnType;\r\n                    return node.sqlType;\r\n                }\r\n            }\r\n\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode, []);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveCreateView(astNode: CreateViewNode){\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        this.resolveSelect(astNode.selectStatement, []);\r\n        symbolTable.childSymbolTables.push(this.symbolTableStack.pop());\r\n    }\r\n\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            if (astNode.select != null) {\r\n                let table = this.resolveSelect(astNode.select, []);\r\n                if (table?.columns != null) {\r\n                    if (columns.length != table.columns.length) {\r\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\r\n                    } else {\r\n                        for (let i = 0; i < columns.length; i++) {\r\n                            let insertColumn = columns[i];\r\n                            let selectColumn = table.columns[i];\r\n                            if (insertColumn.type != null && selectColumn.type != null) {\r\n                                if (!selectColumn.type.canCastTo(insertColumn.type)) {\r\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \"\r\n                                        + (i + 1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" +\r\n                                        insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            } else {\r\n                // Parse value lists\r\n                for (let valueList of astNode.values) {\r\n                    if (valueList.length != columns.length && valueList.length > 0) {\r\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                    } else {\r\n                        for (let i = 0; i < valueList.length; i++) {\r\n                            let value = valueList[i];\r\n                            let column = columns[i];\r\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                            // constantType == 40 means: null\r\n                            // TODO: check if column is nullable!\r\n                            let destType = column.type.toString().toLocaleLowerCase();\r\n                            if (value.constantType == TokenType.keywordNull) {\r\n                                if (!column.isNullable || column.notNull) {\r\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                                }\r\n                            } else if (!value.sqlType.canCastTo(column.type)) {\r\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                                this.pushError(error, \"error\", value.position);\r\n                            } else if (destType == \"date\") {\r\n                                if (!isDate(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\r\n                                if (!isDateTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"time\") {\r\n                                if (!isTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token } from \"../lexer/Token.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        \r\n        let text = file.text.replaceAll(\"&#x27;\",\"'\").replaceAll(\"&quot;\", '\"').replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\").replaceAll(/&amp;/g, \"&\");\r\n        this.model = monaco.editor.createModel(text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import * as monaco from 'monaco-editor';\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([typeof obj == 'string' ? obj : JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        console.log(a.href);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\nexport function createFileUrl(obj: any, isBlob: boolean = false): string {\r\n    const blob = isBlob ? obj : new Blob([typeof obj === 'string' ? obj : JSON.stringify(obj)], { type: 'text/plain' });\r\n    return window.URL.createObjectURL(blob);\r\n}\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n\r\nexport function getCookieValue(name: string): string | undefined \r\n{\r\n  const regex = new RegExp(`(^| )${name}=([^;]+)`)\r\n  const match = document.cookie.match(regex)\r\n  if (match) {\r\n    return match[2]\r\n  }\r\n}","import { PerformanceData } from \"./Data.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport var csrfToken: string = \"\";\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    let headers: {[key: string]: string;} = {};\r\n    if(csrfToken != null) headers = {\"x-token-pm\": csrfToken};\r\n\r\n    jQuery.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        headers: headers,\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            if(response[\"csrfToken\"] != null)\r\n            {\r\n                csrfToken = response[\"csrfToken\"];\r\n            }\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\nexport function extractCsrfTokenFromGetRequest(){\r\n    let url = window.location.href;\r\n    let tokenIndex = url.indexOf(\"csrfToken=\");\r\n    if(tokenIndex >= 0){\r\n        let token = url.substring(tokenIndex + \"csrfToken=\".length);\r\n        if(token != null && token.length > 0){\r\n            csrfToken = token;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function ajaxAsync(url: string, data: any): Promise<any>{\r\n    let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n    if(csrfToken != null){\r\n        headers.push([\"x-token-pm\", csrfToken]);\r\n    }\r\n\r\n    try {\r\n        let response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n         let obj: any = await response.json()\r\n\r\n        if(obj[\"token\"] != null){\r\n            csrfToken = obj[\"token\"];\r\n        }\r\n\r\n        if(obj == null){\r\n            alert(\"Fehler beim Übertragen der Daten.\");             \r\n        } else if(obj.success != true){\r\n            alert(\"Fehler beim Übertragen der Daten:\\n\" + obj.message);             \r\n        }\r\n\r\n        return obj;\r\n    } catch (exception){\r\n        return {\r\n            status: \"Error\",\r\n            message: \"Es ist ein Fehler aufgetreten: \" + exception\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array<ArrayBuffer>) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array<ArrayBuffer>) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            // @ts-ignore\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { csrfToken } from \"../communication/AjaxHelper.js\";\r\nimport { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport pako from 'pako';\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\" | \"distributeWorkspace\", \r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\"| \"distributeWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        let headers: {[key: string]: string;} = { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason };\r\n        if(csrfToken != null) headers[\"x-token-pm\"] = csrfToken;\r\n        \r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: headers,\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","export class FileTool {\r\n    static zipSignature: number[] = [0x78, 0x9c];\r\n    static sqLiteSignature: number[] = [0x53, 0x51, 0x4C, 0x69, 0x74, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x33, 0x00];\r\n\r\n    static isZipfile(fileData: Uint8Array): boolean {\r\n\r\n        return FileTool.checkSignature(fileData, this.zipSignature);\r\n\r\n    }\r\n\r\n    static isSqLiteFile(fileData: Uint8Array): boolean {\r\n\r\n        return FileTool.checkSignature(fileData, this.sqLiteSignature);\r\n\r\n    }\r\n\r\n    static checkSignature(fileData: Uint8Array, signature: number[]): boolean {\r\n\r\n        if(fileData == null) return false;\r\n        if(fileData.byteLength < signature.length) return false;\r\n        \r\n        for(let i = 0; i < signature.length; i++){\r\n            if(fileData[i] != signature[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}","import { BasePushClientManager } from \"./BasePushClientManager.js\";\r\n\r\nexport abstract class PushClientStrategy {\r\n\r\n    nextStrategy: PushClientStrategy;\r\n\r\n    constructor(public name: string, public manager: BasePushClientManager){\r\n\r\n    }\r\n\r\n    abstract open(): void;\r\n\r\n    abstract close();\r\n\r\n}\r\n","import { csrfToken } from \"../AjaxHelper\";\r\nimport { BasePushClientManager } from \"./BasePushClientManager.js\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\n\r\nexport class PushClientLongPollingStrategy extends PushClientStrategy {\r\n\r\n    isClosed: boolean;\r\n    csrfToken: string;\r\n\r\n    shortestTimeoutMs: number = 60000;   // 60 s\r\n    timeOpened: number = null;\r\n\r\n    abortController: AbortController;\r\n\r\n\r\n\r\n    constructor(manager: BasePushClientManager) {\r\n        super(\"long-polling strategy\", manager);\r\n        this.isClosed = false;\r\n    }\r\n\r\n    open(): void {\r\n\r\n        this.isClosed = false;\r\n\r\n        this.abortController = new AbortController();\r\n\r\n        this.timeOpened = performance.now();\r\n\r\n        let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n        headers.push([\"x-token-pm\", csrfToken]);\r\n        this.csrfToken = csrfToken;\r\n        headers.push([\"x-timeout\", this.shortestTimeoutMs + \"\"]);\r\n\r\n        try {\r\n            fetch(\"/servlet/registerLongpollingListener\", {\r\n                signal: this.abortController.signal,\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify({})\r\n            }).then((response) => {\r\n\r\n                if (response.status != 200) {\r\n                    console.log(`Long-polling listener got http-status: ${response.status} (${response.statusText})`);\r\n                    let timeMs = Math.round(performance.now() - this.timeOpened) - 4000;\r\n                    if (timeMs < this.shortestTimeoutMs) this.shortestTimeoutMs = timeMs;\r\n                }\r\n\r\n                switch (response.status) {\r\n                    case 200:\r\n                        response.json().then(data => {\r\n                            this.manager.onMessage(data)\r\n                        });\r\n                        this.reopen();\r\n                        break;\r\n                    case 502:   // timeout!\r\n                    case 504:   // gateway timeout!\r\n                        this.reopen(1000, false);\r\n                        break;\r\n                    default:\r\n                        this.reopen(10000, false);\r\n                        break;\r\n                }\r\n\r\n            }).catch((reason) => {\r\n                console.log(`Long-polling listener failed due to reason: ${reason}`);\r\n                this.reopen(10000, false);\r\n            }).finally(() => {\r\n                this.abortController = null;\r\n            })\r\n\r\n        } catch (ex) {\r\n            this.reopen(10000, false);\r\n        }\r\n\r\n    }\r\n\r\n    reopen(timeout: number = 500, silently: boolean = true) {\r\n        if (this.isClosed) return;\r\n        if(timeout > 500){\r\n            console.log(`Reopen long-polling listener in ${timeout / 1000} seconds...`);\r\n        }\r\n        setTimeout(() => {\r\n            if (this.isClosed) return;\r\n            this.open();\r\n        }, timeout);\r\n\r\n    }\r\n\r\n\r\n    async close() {\r\n        this.isClosed = true;\r\n        this.abortController?.abort();\r\n\r\n        let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n        headers.push([\"x-token-pm\", this.csrfToken]);\r\n\r\n        await fetch(\"/servlet/unregisterLongpollingListener\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({})\r\n        })\r\n    }\r\n\r\n}","import { csrfToken } from \"../AjaxHelper\";\r\nimport { BasePushClientManager, ServerSentMessage } from \"./BasePushClientManager.js\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\n\r\nexport class PushClientWebsocketStrategy extends PushClientStrategy {\r\n\r\n    csrfToken: string;\r\n\r\n    websocket: WebSocket;\r\n\r\n    isClosed: boolean;\r\n\r\n    openedTimestamp: number;\r\n\r\n    currentTimer: any;\r\n\r\n    constructor(manager: BasePushClientManager) {\r\n        super(\"websocket strategy\", manager);\r\n    }\r\n\r\n    open(): void {\r\n\r\n        this.isClosed = false;\r\n\r\n        try {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/pushWebsocket?csrfToken=\" + csrfToken;\r\n\r\n            this.websocket = new WebSocket(url);\r\n    \r\n            this.websocket.onopen = (event) => {\r\n                this.openedTimestamp = performance.now();\r\n            }\r\n    \r\n            this.websocket.onclose = (event) => {\r\n                console.log(\"Websocket has been closed, code: \" + event.code + \", reason: \" + event.reason);\r\n\r\n                this.isClosed = true;\r\n                \r\n                if(event.code == 1001 && performance.now() - this.openedTimestamp > 1e4){\r\n                    // timeout? => reopen\r\n                    console.log(\"Reason was timeout, dt > 10s => Reopen!\");\r\n                    this.open();\r\n                } else {\r\n                    this.manager.onStrategyFailed(this);\r\n                    this.isClosed = true;\r\n                }\r\n                \r\n            }\r\n    \r\n            this.websocket.onerror = (event) => { \r\n                console.log(\"Error on websocket, type: \" + event.type);\r\n                this.websocket.close();\r\n                this.manager.onStrategyFailed(this);\r\n                this.isClosed = true;\r\n            }\r\n    \r\n            this.websocket.onmessage = (event) => {\r\n                if(event.data == \"pong\") return;\r\n                const msg: ServerSentMessage[] = JSON.parse(event.data);\r\n                this.manager.onMessage(msg);\r\n            }\r\n\r\n            if(this.currentTimer != null){\r\n                clearTimeout(this.currentTimer);\r\n            }\r\n\r\n            this.doPing();\r\n\r\n        } catch (ex){\r\n            this.manager.onStrategyFailed(this);\r\n            this.isClosed = true;\r\n        }\r\n\r\n    }\r\n\r\n    doPing(){\r\n        this.currentTimer = setTimeout(() => {\r\n            if(!this.isClosed){\r\n                this.websocket.send(\"ping\");\r\n                this.doPing();\r\n            } else {\r\n                this.currentTimer = null;\r\n            }            \r\n        }, 25000);\r\n\r\n    }\r\n\r\n\r\n    async close() {\r\n        this.isClosed = true;\r\n        this.websocket.close();\r\n    }\r\n\r\n}","import { PushClientLongPollingStrategy } from \"./PushClientLongPollingStrategy\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\nimport { PushClientWebsocketStrategy } from \"./PushClientWebsocketStrategy\";\r\n\r\nexport type PushEventType = \"startPruefung\" | \"stopPruefung\" | \"doFileUpdate\" | \"broadcastDatabaseChange\" | \"checkIfAlive\" | \"close\" | \"onPruefungChanged\"\r\n                     | \"onGradeChangedInPruefungAdministration\"| \"onGradeChangedInMainWindow\" | \"onOpen\" | \"keepAlive\";\r\n\r\nexport type ServerSentMessage = {eventType: PushEventType, data?: any};\r\n\r\nexport type PushMessageHandler = (data: any) => void;\r\n\r\nexport type PushSubscriberInfo = {\r\n    eventType: PushEventType;\r\n    handler: PushMessageHandler;\r\n}\r\n\r\nexport class BasePushClientManager {\r\n\r\n    strategies: PushClientStrategy[] = [];\r\n    currentStrategy: PushClientStrategy;\r\n\r\n    eventTypeToSubscriberInfoMap: Map<string, PushSubscriberInfo> = new Map();\r\n\r\n    public subscribe(eventType: PushEventType, handler: PushMessageHandler) {\r\n        this.eventTypeToSubscriberInfoMap.set(eventType, { eventType: eventType, handler: handler });\r\n    }\r\n    \r\n    public unsubscribe(eventType: PushEventType){\r\n        this.eventTypeToSubscriberInfoMap.delete(eventType);\r\n    }\r\n\r\n\r\n    protected constructor(public baseURL: string){\r\n        this.strategies = [\r\n            new PushClientWebsocketStrategy(this),\r\n            new PushClientLongPollingStrategy(this)\r\n        ]\r\n\r\n        for(let i = this.strategies.length - 2; i >= 0; i--){\r\n            this.strategies[i].nextStrategy = this.strategies[i+1];\r\n        }\r\n    }\r\n\r\n    open(){\r\n        if(this.currentStrategy == null){\r\n            this.currentStrategy = this.strategies[0];\r\n            console.log(`Opening ${this.currentStrategy.name}`);\r\n            this.currentStrategy.open();\r\n        }\r\n    }\r\n\r\n    onMessage(messages: ServerSentMessage[]){\r\n\r\n        for(let message of messages){            \r\n            if(message.eventType == \"keepAlive\") return;\r\n    \r\n            this.eventTypeToSubscriberInfoMap.get(message.eventType)?.handler(message.data);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onStrategyFailed(failedStrategy: PushClientStrategy){\r\n        if(failedStrategy != this.currentStrategy) return;\r\n\r\n        let oldStrategy = this.currentStrategy;\r\n        this.currentStrategy = this.currentStrategy.nextStrategy;\r\n\r\n        let text: string = `${oldStrategy.name} failed. `;\r\n\r\n        if(this.currentStrategy != null){\r\n                text += `=> Trying ${this.currentStrategy.name} in 3 seconds...`;\r\n            setTimeout(() => {\r\n                console.log(`Opening ${this.currentStrategy.name}`);\r\n                this.currentStrategy.open();                \r\n            }, 3000);\r\n        } else {\r\n            text += `It was the last resort, unfortunately this client has no means to receive push-messages from server.`;\r\n        }\r\n\r\n        console.log(text);\r\n\r\n    }\r\n\r\n    close() {\r\n        if(this.currentStrategy != null){\r\n            this.currentStrategy.close();\r\n            this.currentStrategy = null;\r\n        }\r\n    }\r\n\r\n\r\n}","import { BasePushClientManager, PushEventType, PushMessageHandler } from \"./BasePushClientManager.js\";\r\n\r\n\r\nexport class PushClientManager extends BasePushClientManager {\r\n\r\n    private static instance: PushClientManager;\r\n\r\n\r\n    public static subscribe(eventType: PushEventType, handler: PushMessageHandler) {\r\n        PushClientManager.getInstance().subscribe(eventType, handler);\r\n    }\r\n    \r\n    public static unsubscribe(eventType: PushEventType){\r\n        PushClientManager.getInstance().unsubscribe(eventType);\r\n    }\r\n\r\n\r\n    public static getInstance(): PushClientManager {\r\n        if(PushClientManager.instance == null){\r\n            PushClientManager.instance = new PushClientManager(\"\");\r\n        }\r\n        return PushClientManager.instance;\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, csrfToken } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { TemplateUploader } from \"../tools/TemplateUploader.js\";\r\nimport { FileTool } from \"../tools/FileTool.js\";\r\nimport { PushClientManager } from \"./pushclient/PushClientManager.js\";\r\nimport pako from 'pako'\r\nimport jQuery from \"jquery\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initializeSSE() {\r\n        PushClientManager.subscribe(\"doFileUpdate\", (data) => {\r\n            let oldWorkspaces = this.main.workspaceList.slice();\r\n            this.sendUpdates(() => {\r\n\r\n                let names = this.main.workspaceList.filter(ws => oldWorkspaces.indexOf(ws) < 0)\r\n                .map(ws => ws.name).join(\", \");\r\n\r\n                alert(`Deine Lehrkraft hat Dir folgende Datenbank übermittelt: ${names}`);\r\n\r\n            }, true);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        let callbackAfterSettingWorkspaceActive = () => {\r\n\r\n            new TemplateUploader().uploadCurrentDatabase(ws.id, this.main, null,\r\n                \"distributeWorkspace\",\r\n                (response) => {\r\n\r\n                    this.sendUpdates(() => {\r\n\r\n                        let request: DistributeWorkspaceRequest = {\r\n                            workspace_id: ws.id,\r\n                            database_as_template_id: response.newTemplateId,\r\n                            class_id: klasse?.id,\r\n                            student_ids: student_ids\r\n                        }\r\n\r\n                        ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                            callback(response.message)\r\n                        }, callback);\r\n\r\n                    }, false);\r\n                });\r\n\r\n        }\r\n\r\n        this.main.projectExplorer.setWorkspaceActive(ws, callbackAfterSettingWorkspaceActive);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                workspace.databaseId = workspace.database.id;\r\n\r\n                if (workspace.database.based_on_template_id == null) {\r\n                    callback(null);\r\n                    return\r\n                }\r\n\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (FileTool.isZipfile(templateDump)) {\r\n                        try {\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch (err) {\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                    } else {\r\n                        workspace.database.templateDump = templateDump;\r\n                    }\r\n\r\n                    if (FileTool.isSqLiteFile(workspace.database.templateDump)) {\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        this.fetchTemplate(workspace.id, (template, error) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                workspace.database.templateDump = null;\r\n                                callback(error);\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, (errormessage: string) => {\r\n            callback(\"Netzwerkfehler: \" + errormessage);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array<ArrayBuffer>, error?: string) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        let headers: { [key: string]: string; } = {};\r\n        if (csrfToken != null) headers = { \"x-token-pm\": csrfToken };\r\n\r\n        jQuery.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            headers: headers,\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                callback(null, \"Konnte das Template nicht laden.\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n\r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","/**\r\n * BEWARE: Identical function in sqljsWorker.ts!!\r\n */\r\nexport function createDb(SQL, buffer) {\r\n\r\n    const db = new SQL.Database(buffer);\r\n\r\n    db.create_function(\"isDate\", function (inputText) {\r\n\r\n        if (inputText == null) return true;\r\n        if (typeof inputText != 'string') return false;\r\n\r\n        // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        // Match the date format through regular expression\r\n        if (inputText.match(dateformat)) {\r\n            //Test which seperator is used '/' or '-'\r\n            var opera1 = inputText.split('/');\r\n            var opera2 = inputText.split('-');\r\n            var lopera1 = opera1.length;\r\n            var lopera2 = opera2.length;\r\n            // Extract the string into month, date and year\r\n            if (lopera1 > 1) {\r\n                var pdate = inputText.split('/');\r\n            }\r\n            else if (lopera2 > 1) {\r\n                var pdate = inputText.split('-');\r\n            }\r\n            if (pdate.length != 3) return false;\r\n            var dd = parseInt(pdate[2]);\r\n            var mm = parseInt(pdate[1]);\r\n            var yy = parseInt(pdate[0]);\r\n            // Create list of days of a month [assume there is no leap year by default]\r\n            var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n            if (mm == 1 || mm > 2) {\r\n                if (dd > ListofDays[mm - 1]) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (mm == 2) {\r\n                var lyear = false;\r\n                if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                    lyear = true;\r\n                }\r\n                if ((lyear == false) && (dd >= 29)) {\r\n                    return false;\r\n                }\r\n                if ((lyear == true) && (dd > 29)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    db.create_function(\"isDateTime\", function (inputText) {\r\n        if (inputText == null) return true;\r\n\r\n        if (typeof inputText != 'string') return false;\r\n\r\n        // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n        var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][1-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n        // Match the date format through regular expression\r\n        if (inputText.match(dateformat)) {\r\n            var splitStr = inputText.split(' ');\r\n            var dateStr = splitStr[0];\r\n            //var timeStr = splitStr[1];\r\n\r\n            // if (dateStr.length != 3) return false;\r\n            // var dd = parseInt(dateStr[2]);\r\n            // var mm = parseInt(dateStr[1]);\r\n            // var yy = parseInt(dateStr[0]);\r\n            if (dateStr.length != 10) return false;\r\n            var dd = parseInt(dateStr.substring(8, 10));\r\n            var mm = parseInt(dateStr.substring(5, 7));\r\n            var yy = parseInt(dateStr.substring(0, 4));\r\n            // Create list of days of a month [assume there is no leap year by default]\r\n            var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n            if (mm == 1 || mm > 2) {\r\n                if (dd > ListofDays[mm - 1]) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (mm == 2) {\r\n                var lyear = false;\r\n                if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                    lyear = true;\r\n                }\r\n                if ((lyear == false) && (dd >= 29)) {\r\n                    return false;\r\n                }\r\n                if ((lyear == true) && (dd > 29)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    db.create_function(\"month\", function (inputText) {\r\n        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        let match = inputText.match(dateformat);\r\n        if (match) {\r\n            return Number(match[1]);\r\n        }\r\n        return -1;\r\n    })\r\n\r\n    db.create_function(\"day\", function (inputText) {\r\n        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        let match = inputText.match(dateformat);\r\n        if (match) {\r\n            return Number(match[2]);\r\n        }\r\n        return -1;\r\n    })\r\n\r\n    db.create_function(\"year\", function (inputText) {\r\n        var dateformat = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        let match = inputText.match(dateformat);\r\n        if (match) {\r\n            return Number(match[1]);\r\n        }\r\n        return -1;\r\n    })\r\n\r\n    db.create_function(\"isTime\", function (inputText) {\r\n        if (inputText == null) return true;\r\n\r\n        if (typeof inputText != 'string') return false;\r\n\r\n        var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n        // Match the date format through regular expression\r\n        return inputText.match(timeformat) != null;\r\n    });\r\n\r\n    db.create_function(\"concat\", function (arg) {\r\n        if (arguments == null) return \"\";\r\n        let erg = \"\";\r\n        for (let i = 0; i < arguments.length; i++) {\r\n            erg += (\"\" + arguments[i]);\r\n        }\r\n        return erg;\r\n    })\r\n\r\n\r\n\r\n    return db;\r\n}\r\n\r\n","export default {}","import {createDb} from './sqljsWorkerTools.js';\r\n\r\nimport initSqlJs from 'sql.js/dist/sql-wasm'\r\nimport wasmUrl from 'sql.js/dist/sql-wasm.wasm?url' // vite magic: get url as string, let vite track the dependency\r\n\r\nexport class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    // initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => wasmUrl});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport jQuery from \"jquery\";\r\nimport workerUrl from \"./sqljsWorker?worker&url\";\r\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array<ArrayBuffer>\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n    enumValues: string[];\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n    type: (\"table\"|\"view\");\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n    \r\n    private isReloading: boolean = false; // Flag to prevent infinite reload loops\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // @ts-ignore\r\n        if(window.jo_doc){\r\n            // In embedded mode inside iframe the calling domain is different, so web workers are not supported\r\n            // because of browser security policy.\r\n            // Use simulated worker instead.\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            // see https://v3.vitejs.dev/guide/features.html#web-workers\r\n            // see https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\r\n            this.worker = new Worker(new URL(\"sqljsWorker.ts\", import.meta.url), { type: 'module' });\r\n            this.worker = new Worker(workerUrl, { type: 'module' });\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            that.worker.onmessage = event => {\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n            execQuery();\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n        // Automatisches Reload der Datenbank vor jeder Abfrage bei embedded Instanzen\r\n        // Aber nur wenn nicht bereits ein Reload läuft und es keine interne Struktur-Abfrage ist\r\n        if (this.main.isEmbedded() && !this.isReloading) {\r\n            const mainEmbedded = this.main as any; // Type assertion für MainEmbedded\r\n            \r\n            // Prüfe ob eine databaseURL konfiguriert ist und es keine Systemabfrage ist\r\n            if (mainEmbedded.config?.databaseURL != null && mainEmbedded.fetcher != null && !this.isSystemQuery(query)) {\r\n                this.isReloading = true; // Verhindere weitere Reloads\r\n                \r\n                // Lade Datenbank neu und führe dann die Abfrage aus\r\n                mainEmbedded.fetcher.load(mainEmbedded.config.databaseURL).then((loadableDb: any) => {\r\n                    mainEmbedded.initialTemplateDump = loadableDb.binDump;\r\n                    \r\n                    // Initialisiere Worker mit neuer Datenbank\r\n                    this.initializeWorker(loadableDb.binDump, loadableDb.statements || [], () => {\r\n                        this.isReloading = false; // Reload abgeschlossen\r\n                        // Nach erfolgreichem Reload, führe die ursprüngliche Abfrage aus\r\n                        this.executeQueryInternal(query, successCallback, errorCallback);\r\n                        this.saveSQLutionDatabase();\r\n                    }, () => {\r\n                        // Structure retrieval completed\r\n                    });\r\n                }).catch((error: string) => {\r\n                    this.isReloading = false; // Reload failed, reset flag\r\n                    console.error('Fehler beim automatischen Reload der Datenbank:', error);\r\n                    errorCallback('Database reload failed: ' + error);\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Standard-Verhalten: Führe Abfrage direkt aus\r\n        this.executeQueryInternal(query, successCallback, errorCallback);\r\n\r\n    }\r\n\r\n    private saveSQLutionDatabase() {\r\n        // Automatisches Speichern der Datenbank bei embedded Instanzen\r\n        if (!this.main.isEmbedded()) return;\r\n        const mainEmbedded = this.main as any; // Type assertion für MainEmbedded\r\n        if (mainEmbedded.config?.databaseURL == null || mainEmbedded.fetcher == null) return;\r\n        this.export(\r\n            (db) => {\r\n                // @ts-ignore\r\n                const buffer = db.buffer instanceof ArrayBuffer ? db.buffer : new ArrayBuffer(db.buffer.byteLength);\r\n                if (!(db.buffer instanceof ArrayBuffer)) {\r\n                    new Uint8Array(buffer).set(new Uint8Array(db.buffer));\r\n                }\r\n                const blob = new Blob([new Uint8Array(buffer)], { type: 'application/octet-stream' });\r\n                \r\n                // @ts-ignore\r\n                const csrftoken = document.querySelector('[name=csrfmiddlewaretoken]').value;\r\n                fetch(\"/api/upload_db/\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/octet-stream\",  \"X-CSRFToken\": csrftoken },\r\n                    body: blob\r\n                }).then((response) => {\r\n                    if (!response.ok) {\r\n                        console.error(response)\r\n                    }\r\n                })\r\n            },\r\n            (error) => {\r\n                console.error(\"Export failed: \" + error);\r\n            }\r\n        );\r\n    }\r\n\r\n    private isSystemQuery(query: string): boolean {\r\n        // Systemabfragen, die keinen Reload auslösen sollen\r\n        const systemQueries = [\r\n            'PRAGMA',\r\n            'SELECT name, sql, type FROM sqlite_master',\r\n            'PRAGMA table_info(',\r\n            'PRAGMA foreign_key_list(',\r\n            'select count(*) from'\r\n        ];\r\n        \r\n        const upperQuery = query.trim().toUpperCase();\r\n        return systemQueries.some(pattern => upperQuery.startsWith(pattern.toUpperCase()));\r\n    }\r\n\r\n    private executeQueryInternal(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array<ArrayBuffer>) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql, type FROM sqlite_master WHERE type='table' or type='view';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            let values = result[0]?.values;\r\n            let types: (\"table\"|\"view\")[] = values?.map(value => value[2]);\r\n\r\n            values?.forEach(value => sql1 += `PRAGMA table_info(\"${value[0]}\");\\nPRAGMA foreign_key_list(\"${value[0]}\");\\nselect count(*) from \"${value[0]}\";\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1, types)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { \r\n                    console.log(error);\r\n                    that.databaseStructure = { tables: [] };\r\n                    callback(that.databaseStructure);\r\n                });\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[], types: (\"table\"|\"view\")[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = <string>tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: [],\r\n                type: types[i]\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName.toLocaleLowerCase(), tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let enumValues: string[] = [];\r\n\r\n                if(type.indexOf(\"Enum\") >= 0){\r\n                    let rs = `\"${name}\" ${type} .* check\\\\(\"${name}\" in \\\\((.*)\\\\)\\\\)`;\r\n                    let regEx = new RegExp(rs);\r\n                    let match = tableSQL.match(regEx);\r\n                    if(match != null){\r\n                        enumValues = match[1].split(\", \");\r\n                    }\r\n                }\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    enumValues: enumValues,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]?.toLocaleLowerCase());\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { copyTextToClipboard } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; padding-left: 10px; box-sizing: border-box\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\"> Eigentümer/in: <span class='jo_ds_settings_owner' style='font-weight: normal' ></span></div>\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                    Beschreibung:\r\n                </div>\r\n                <div>\r\n                    <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div id=\"jo_ds_ownerSettings\">\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                    Zugriffscodes für andere Benutzer:\r\n                    </div>\r\n                                    \r\n                    <div>\r\n                        <table class=\"jo_ds_secret_table\">\r\n                        <tr>\r\n                            <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                        <tr>\r\n                            <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                        </tr>\r\n                        </table>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                    Datenbank freigeben als Vorlage für andere Benutzer:\r\n                    </div>\r\n\r\n                    <fieldset id=\"jo_ds_publishedTo\">\r\n                        <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                        <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                        <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                        <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                    </fieldset>\r\n\r\n                    <div class=\"jo_ds_settings_caption\" style=\"margin-top: 5px\">\r\n                    Wichtiger Hinweis:\r\n                    </div>\r\n                    <div style=\"font-weight: normal\">\r\n                    Beim erstmaligen Freigeben wird der aktuelle Zustand der Datenbank als Vorlage für andere Benutzer/innen hochgeladen und bereitgestellt. Änderungen, die danach \r\n                    in der Datenbank vorgenommen werden, werden nur dann in die Vorlage integriert, wenn explizit \"Datenbank -> Aktuellen Zustand als Vorlage hochladen\" aufgerufen wird.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        if (!this.main.user.is_teacher) {\r\n            jQuery('#b2').next().remove();\r\n            jQuery('#b2').remove();\r\n        }\r\n\r\n        if (!(this.main.user.is_admin || this.main.user.username == 'DB-Vorlagen')) {\r\n            jQuery('#b3').next().remove();\r\n            jQuery('#b3').remove();\r\n        }\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => {\r\n            this.saveNameAndPublishedTo();\r\n        })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_' + kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_' + kind).text());\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo() {\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each((n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if (<HTMLInputElement>element.checked) {\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        let newName = <string>jQuery('.jo_databasename').val();\r\n        let newDescription = <string>jQuery('.jo_ds_settings_description').val();\r\n\r\n        this.workspace.name = newName;\r\n        this.workspace.panelElement.$htmlFirstLine.find('.jo_filename').text(newName);\r\n        this.workspace.saved = false;\r\n\r\n        let database = this.workspace.database;\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id,\r\n            newName, published_to, newDescription,\r\n            () => {\r\n                this.workspace.name = newName;\r\n                if (database.published_to == 0 && published_to > 0) {\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");\r\n                }\r\n                database.published_to = published_to;\r\n                database.description = newDescription;\r\n                this.showMainWindow();\r\n            })\r\n    }\r\n\r\n    setValues() {\r\n        jQuery('.jo_databasename').val(this.workspace.database.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n\r\n            let ownerText: string = response.owner;\r\n            if (!response.userIsOwner && response.secrets != null) ownerText += \" (hat aber keinen mit der Datenbank verbundenen Workspace)\";\r\n\r\n            jQuery('.jo_ds_settings_owner').text(ownerText);\r\n\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                let secret: string = \"---\";\r\n                if (response.secrets != null) secret = response.secrets[kind];\r\n                jQuery('.jo_ds_secret_' + kind).text(secret);\r\n            });\r\n            if (this.main.user.is_admin || this.main.user.username == 'DB-Vorlagen') {\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if (this.main.user.is_schooladmin) {\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b' + response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n\r\n            if (response.secrets == null) {\r\n                this.$dialog.find('input, textarea').attr('readonly', '').css('background-color', '#888');\r\n                this.$dialog.find('#jo_ds_ownerSettings').hide();\r\n                this.$dialog.find('#jo_ds_save_button').hide();\r\n            } else {\r\n                this.$dialog.find('input, textarea').removeAttr('readonly').css('background-color', '#fff');;\r\n                this.$dialog.find('#jo_ds_ownerSettings').show();\r\n                this.$dialog.find('#jo_ds_save_button').show();\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\nimport * as monaco from 'monaco-editor'\r\nimport jQuery from \"jquery\";\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { MainBase } from \"../MainBase.js\";\r\nimport { Table} from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../sqljs-worker/DatabaseTools.js\";\r\nimport { downloadFile, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if (table.identifier != \"sqlite_sequence\") {\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"${table.type == \"table\" ? \"img_table\" : \"img_view\"}\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.type == \"view\" ? \"View, \" : \"\"}${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n\r\n        const $tableHeader = $table.find('.jo_tableheader');\r\n\r\n        $tableHeader[0].addEventListener(\"contextmenu\", (e) => { e.preventDefault() });\r\n\r\n        $tableHeader.on('pointerup', (e) => {\r\n            if (e.button == 0) this.main.getResultsetPresenter().showTable(table);\r\n            if (e.button == 2) {\r\n                openContextMenu([\r\n                    {\r\n                        caption: \"CSV-Export\",\r\n                        callback: () => {\r\n                            this.csvExport(table);\r\n                        }\r\n                    },\r\n                    {\r\n                        caption: \"Abbrechen\",\r\n                        callback: () => {\r\n                            // nothing to do.\r\n                        }\r\n                    }\r\n                ], e.pageX + 2, e.pageY + 2);\r\n                e.stopPropagation();\r\n            }\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n    csvExport(table: Table){\r\n        let statement = \"select * from \" + table.identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => {\r\n                let file: string = \"\";\r\n                // file += table.columns.map(c => c.identifier).join(\"; \") + \"\\n\";\r\n                const result = results.pop();\r\n                if(result){\r\n                    file += result.columns.map(c => `\"${c}\"`).join(\",\") + \"\\n\";\r\n                    file += result.values.map(line => line.map(c => `\"${c}\"`).join(\",\")).join(\"\\n\");\r\n                }\r\n                downloadFile(\"\\ufeff\" + file, table.identifier + \".csv\", false);\r\n            },\r\n            (error) => { });\r\n\r\n    }\r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        // setTimeout(() => {\r\n        //     //@ts-ignore\r\n        //     let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n        //     if (this.first) {\r\n        //         sw.toggleDetails();\r\n        //         this.first = false;\r\n        //     }\r\n        // }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { MethodCallPosition, Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport * as monaco from 'monaco-editor'\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"select\": \"```\\nselect spalte1, spalte2, ..., spalteN from tabelle where <Bedingung>\\n``` \\nsucht alle Zeilen der Tabelle, die der Bedingung genügen (**Selektion**) und gibt davon die angegebenen Spalten aus (**Projektion**). Das Ergebnis der ```select```-Anweisung ist wieder eine Tabelle. \\n \",\r\n        \"from\": \"```\\nselect spalte1, spalte2, ..., spalteN from tabelle where <Bedingung>\\n``` \\nsucht alle Zeilen der Tabelle, die der Bedingung genügen (**Selektion**) und gibt davon die angegebenen Spalten aus (**Projektion**). Das Ergebnis der ```select```-Anweisung ist wieder eine Tabelle. \\n \",\r\n        \"where\": \"```\\n... where <Bedingung>\\n``` \\nHinter ```where``` steht immer eine Bedingung, d.h. ein Term mit booleschem Wert (```true``` oder ```false```). Die Anweisung wird für alle Zeilen ausgeführt, die der Bedingung genügen, d.h. für die der Term den Wert ```true``` ergibt. \\n \",\r\n        \"delete\": \"```\\ndelete from tabelle where <Bedingung>\\n``` \\nlöscht alle Zeilen der Tabelle, die der Bedingung genügen. \\n \",\r\n        \"insert\": \"```\\ninsert (spalte1, spalte2, ..., spalteN) into tabelle values (Wert1, ..., WertN), (Wert1, ..., WertN), ... \\n``` \\nFügt Datensätze in eine Tabelle ein. Die Werte ```wert1, ..., wertN``` müssen den angegebenen Spalten ```Spalte1, ..., SpalteN``` entsprechen.\\n \",\r\n        \"values\": \"```\\ninsert (spalte1, spalte2, ..., spalteN) into tabelle values (Wert1, ..., WertN), (Wert1, ..., WertN), ... \\n``` \\nFügt Datensätze in eine Tabelle ein. Die Werte ```wert1, ..., wertN``` müssen den angegebenen Spalten ```Spalte1, ..., SpalteN``` entsprechen.\\n \",\r\n        \"update\": \"```\\nupdate tabelle set Spalte1 = Wert1, Spalte2 = Wert2, ..., SpalteN = WertN where <Bedingung> \\n``` \\nÄndert in allen Datensätze der Tabelle, die der Bedingung genügen, die Werte in den angegebenen Spalten ```Spalte1, ..., SpalteN```.\\n \",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"=\": \"```\\na = b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\n```=``` nennt man **Vergleichsoperator**. \\n\\n**Tipp:** In SQL gibt es auch einen **Ungleich-Operator**: ```<>```\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"<>\": \"```\\na <> b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\n```<>``` nennt man **Ungleich-Operator**.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport * as monaco from 'monaco-editor'\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = [];\r\n        // const actions = context.markers.map(error => {\r\n        //     let quickFix: QuickFix = <any>error.relatedInformation;\r\n        //     if (quickFix == null) return null;\r\n\r\n        //     let codeAction: monaco.languages.CodeAction = {\r\n        //         title: quickFix.title,\r\n        //         diagnostics: [error],\r\n        //         kind: \"quickfix\",\r\n        //         edit: {\r\n        //             edits: quickFix.editsProvider(model.uri)\r\n        //         },\r\n        //         isPreferred: true\r\n        //     };\r\n        //     return codeAction;\r\n        // });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport * as monaco from 'monaco-editor';\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import * as monaco from 'monaco-editor'\r\n\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let user = main.user;\r\n        if(user == null) return;\r\n\r\n        let helperHistory = user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { defineVscSQL } from \"./VSCSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport jQuery from \"jquery\";\r\nimport * as monaco from 'monaco-editor'\r\n\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: monaco.editor.ShowLightbulbIconMode.On\r\n            },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: \"off\",\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            if(element != null){\r\n                element.removeEventListener(\"wheel\", mouseWheelListener);\r\n                element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n            }\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyK],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sql;\r\n                //return statement.sqlCleaned; DANGER: cleaned statements do not work with DataSpark variables!\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sql;\r\n                    //return statement.sqlCleaned;  DANGER: cleaned statements do not work with DataSpark variables!\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => this.escapeIdentifier(c.identifier)).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${this.escapeIdentifier(ast.identifier)}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice(); //.map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier;\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${this.escapeIdentifiers(pkc).join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + this.escapeIdentifiers(uk).join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${this.escapeIdentifier(fki.column)}) references ${this.escapeIdentifier(fki.referencesTable)}(${this.escapeIdentifier(fki.referencesColumn)})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.getSQLiteType();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${this.escapeIdentifier(column.identifier)} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = this.escapeIdentifier(fki.referencesTable) + \"(\" + this.escapeIdentifier(c) + \")\";\r\n            st += \" references \" + c;\r\n            if(fki.onDelete){\r\n                st += \" on delete \" + fki.onDelete;\r\n            }\r\n            if(fki.onUpdate){\r\n                st += \" on update \" + fki.onUpdate;\r\n            }\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(this.escapeIdentifier(column.identifier), parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n    escapeIdentifier(id: string){\r\n        return '\"' + id + '\"';\r\n    }\r\n\r\n    escapeIdentifiers(list: string[]):string[] {\r\n        return list.map(this.escapeIdentifier);\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../sqljs-worker/DatabaseTools.js\";\r\nimport * as zip from \"@zip.js/zip.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = \"\";\r\n        if (entries.length) {\r\n            for(let entry of entries){\r\n                // get first entry content as text by using a TextWriter\r\n                text += await entry.getData(\r\n                    // writer\r\n                    new zip.TextWriter(),\r\n                    // options\r\n                    {\r\n                        onprogress: (index, max) => {\r\n                            // onprogress callback\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''}index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`,\r\n                        resultTypes: []\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../sqljs-worker/DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\nimport pako from 'pako'\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array<ArrayBuffer> = new Uint8Array(ab);\r\n        \r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            // @ts-ignore\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../sqljs-worker/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\nimport pako from 'pako'\r\n\r\nimport jQuery from \"jquery\";\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_templateListDiv\">\r\n                        <div class=\"jo_templateListOuter\">\r\n                            <div class=\"jo_templateListCaption\">Vorlagen anderer Nutzer:</div> \r\n                            <div class=\"jo_scrollable jo_templatelist jo_templatelist_others\"></div>\r\n                        </div>\r\n                        <div class=\"jo_templateListOuter\">\r\n                            <div class=\"jo_templateListCaption\">Eigene Datenbank als Vorlage:</div> \r\n                            <div class=\"jo_scrollable jo_templatelist jo_templatelist_mine\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist_others = jQuery('.jo_templatelist_others');\r\n        let $templatelist_mine = jQuery('.jo_templatelist_mine');\r\n\r\n        let myUserId = this.main.user.id;\r\n\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.sort((t1, t2) => {\r\n                return t1.name.localeCompare(t2.name);\r\n            })\r\n            \r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                if(tle.ownerId == myUserId){\r\n                    $templatelist_mine.append($tle);\r\n                } else {\r\n                    $templatelist_others.append($tle);\r\n                }\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist_others.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $templatelist_mine.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist_others.find('.jo_templateListEntry').hide();\r\n                $templatelist_mine.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.panelElement = accordionElement;\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport jQuery from \"jquery\";\r\n\r\ndeclare var BUILD_DATE: string;\r\ndeclare var APP_VERSION: string;\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n    noHoverAnimation?: boolean\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n                            {\r\n                                identifier: \"Aktuellen Zustand als Vorlage hochladen...\", action: () => {\r\n                                    let currentWorkspace = this.main.currentWorkspace;\r\n                                    if (currentWorkspace == null) {\r\n                                        alert('Es ist kein Workspace ausgewählt.');\r\n                                        return;\r\n                                    }\r\n                                    if (currentWorkspace.database.owner_id != this.main.user.id) {\r\n                                        alert('Die Datenbank gehört einer anderen Benutzerin/einem anderen Benutzer. Sie kann daher nicht als Vorlage hochgeladen werden.');\r\n                                        return;\r\n                                    }\r\n                                    if (currentWorkspace.database.published_to == 0) {\r\n                                        alert('Die Datenbank ist noch nicht für andere Benutzer/innen veröffentlicht, daher kann sie nicht als Vorlage hochgeladen werden. \\nDie Möglichkeit zum Veröffentlichen finden Sie unter Datenbank->Einstellungen.');\r\n                                        return;\r\n                                    }\r\n                                    new TemplateUploader().uploadCurrentDatabase(currentWorkspace.id, this.main, null, \"publishDatabaseAsTemplate\",\r\n                                        () => { alert('Der aktuelle Zustand der Datebank wurde erfolgreich als Vorlage hochgeladen.') });\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            },\r\n                            {\r\n                                identifier: \"Impressum...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=ide:impressum\"\r\n                            },\r\n                            {\r\n                                identifier: \"Datenschutzerklärung...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=ide:datenschutzerklaerung\"\r\n                            },\r\n                            {\r\n                                identifier: \"<div class='jo_menu_version'>\" + \"Version \" + APP_VERSION + \" (\" + BUILD_DATE + \")</div>\",\r\n                                noHoverAnimation: true\r\n                            }\r\n\r\n\r\n                        ]\r\n                    }\r\n                }\r\n\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin)) {\r\n            mainMenu.items[0].subMenu.items.push({\r\n                identifier: \"Shutdown server...\",\r\n                action: () => {\r\n                    if (confirm(\"Server wirklich herunterfahren?\")) {\r\n                        ajax(\"shutdown\", {}, () => {\r\n                            alert('Server erfolgreich heruntergefahren.');\r\n                        }, (message) => {\r\n                            alert(message);\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            )\r\n        }\r\n\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                let noHoverKlass = mi.noHoverAnimation ? ' class=\"jo_menuitem_nohover\"' : '';\r\n                mi.$element = jQuery(`<div${noHoverKlass}>${mi.identifier}</div>`);\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"pointerdown\", (event) => {\r\n                        event.stopPropagation();\r\n                    })\r\n                    $link.on(\"pointerup\", (ev) => {\r\n                        ev.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('pointerdown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('pointerdown', (ev) => {\r\n                ev.stopPropagation();\r\n            })\r\n\r\n\r\n            mi.$element.on('pointerup', (ev) => {\r\n                ev.stopPropagation();\r\n                mi.action(mi.identifier);\r\n                for (let i = 0; i < 5; i++) {\r\n                    if (that.currentSubmenu[i] != null) {\r\n                        that.currentSubmenu[i].hide();\r\n                        that.currentSubmenu[i] = null;\r\n                    }\r\n                }\r\n                that.openSubmenusOnMousemove = false;\r\n            });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    pathStartsWith(path: string[], pathStart: string[]){\r\n        if(path.length < pathStart.length) return false;\r\n        for(let i = 0; i < pathStart.length; i++){\r\n            if(path[i] != pathStart[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            let oldName = element.name;\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n\r\n            if(element.isFolder){\r\n                \r\n                let oldPath = element.path.slice().concat([oldName]);\r\n\r\n                let movedElements: AccordionElement[] = [];\r\n\r\n                for(let e of this.elements){\r\n\r\n                    if(this.pathStartsWith(e.path, oldPath)){\r\n                        e.path[oldPath.length - 1] = element.name;\r\n                        movedElements.push(e);\r\n                    }\r\n\r\n                }\r\n\r\n                if(movedElements.length > 0) this.moveCallback(movedElements);\r\n\r\n            }\r\n\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                jQuery('.jo_ds_student_line').show();\r\n            } else {\r\n                jQuery('.jo_ds_student_line').each((index, element) => {\r\n                let filterTextLowerCase = filterText.toLocaleLowerCase();\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.toLocaleLowerCase().indexOf(filterTextLowerCase) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeDatabase();});\r\n\r\n        (<HTMLInputElement>jQuery('.jo_ds_filterdiv>input')[0]).focus();\r\n\r\n    }\r\n\r\n    distributeDatabase() {\r\n\r\n        let student_ids: number[] = [];\r\n        jQuery('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Accordion, AccordionContextMenuItem, AccordionElement, AccordionPanel } from \"./Accordion.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\nimport jQuery from \"jquery\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                if(module && module.file && that?.main?.networkManager){\r\n                    that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                        if (error == null) {\r\n                            that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                            callbackIfSuccessful();\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n    \r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substring(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n\r\n                // if user owns database: rename it, too\r\n                if(workspace.database.owner_id == workspace.owner_id){\r\n                    workspace.database.name = newName;\r\n                    that.main.networkManager.setNameAndPublishedTo(workspace.id, newName, workspace.database.published_to, workspace.database.description, () => {})\r\n                }\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        if(!workspace.isFolder){\r\n                            that.fileListPanel.clear();\r\n                            that.main.databaseExplorer.clear();\r\n                            that.main.getResultsetPresenter().clear();\r\n                            that.fileListPanel.enableNewButton(false);\r\n                            that.main.getMonacoEditor().setModel(null);\r\n                        }\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Fehler: ' + error);\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace?.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, callback?: () => void, scrollIntoView: boolean = false) {\r\n\r\n        if(callback == null) callback = () => {}\r\n\r\n        if(w == this.main.getCurrentWorkspace()){\r\n            if(callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        if (w != null) {\r\n            if(w.isFolder){\r\n                this.main.currentWorkspace = null;\r\n                this.main.databaseTool.initializeWorker(null, [], null, () => {\r\n                    this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                });\r\n                this.setModuleActive(null);\r\n                return;\r\n            } else {\r\n                this.fileListPanel.$buttonNew.show();\r\n            }\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        let callbackAfterDatabaseFetched = (error: string) => {\r\n            if (error != null) {\r\n                alert(error);\r\n                this.main.waitOverlay.hide();\r\n                if(callback != null) callback();\r\n            } else {\r\n                this.main.waitOverlay.show(\"Bitte warten, initialisiere Datenbank ...\");\r\n                this.initializeDatabaseTool(w, callback)\r\n            }\r\n        };\r\n\r\n        if(w == null) return;\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callbackAfterDatabaseFetched);\r\n        } else {\r\n            callbackAfterDatabaseFetched(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(w: Workspace, callback?: () => void) {\r\n\r\n        if(!w.database){\r\n            if(callback) callback();\r\n            return;\r\n        }\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user?.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    \r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n                \r\n                this.main.notifier.connect(w);\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n                if(callback != null) callback();\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { Table } from \"../../compiler/parser/SQLTable.js\";\r\nimport { SQLType } from \"../../compiler/parser/SQLTypes.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../sqljs-worker/DatabaseTools.js\";\r\nimport { downloadFile } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n    resultColumnTypes: SQLType[];\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        const $exportCsvButton = jQuery('<div class=\"jo_button jo_active img_export-csv-dark\"></div>')\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\"></span>/<span class=\"jo_pagination_all\"></span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append($exportCsvButton, this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        const resultTab =  <any>$bottomDiv.find('.jo_resultTab');\r\n        resultTab.on('myshow', (e) => {\r\n            this.$paginationDiv.show();\r\n        })\r\n\r\n        resultTab.on('myhide', (e) => {\r\n            this.$paginationDiv.hide();\r\n        })\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        $exportCsvButton.on('click', () => {\r\n            this.exportCSV();\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    exportCSV(){\r\n        let file: string = \"\";\r\n        // file += table.columns.map(c => c.identifier).join(\"; \") + \"\\n\";\r\n        if(this.result){\r\n            file += this.result.columns.map(c => `\"${c}\"`).join(\",\") + \"\\n\";\r\n            file += this.result.values.map(line => line.map(c => `\"${c}\"`).join(\",\")).join(\"\\n\");\r\n        }\r\n        downloadFile(\"\\ufeff\" + file, \"results.csv\", false);\r\n\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n\r\n        if (statements.length == 0) return;\r\n\r\n\r\n\r\n        for(let s of statements){\r\n            let sql = s.sql;\r\n            // Extract inputs in the form {name} (not followed by [)\r\n            let inputs: string[] = [];\r\n            let inputRegex = /(\\{[^}]+\\})[^\\[]/g; // simple input variables\r\n            let match;\r\n            while ((match = inputRegex.exec(sql)) !== null) {\r\n                if (!inputs.includes(match[1])) {\r\n                    inputs.push(match[1]);\r\n                }\r\n            }\r\n            inputRegex = /(\\{[^}]+\\}\\[[^\\]]+\\])/g; // dropdown inputs\r\n            while ((match = inputRegex.exec(sql)) !== null) {\r\n                if (!inputs.includes(match[1])) {\r\n                    inputs.push(match[1]);\r\n                }\r\n            }\r\n            for (let input of inputs) {\r\n                let value = null;\r\n                let count = 0;\r\n                while (value == null && count < 2) {\r\n                    value = prompt(\"Gib einen Wert für '\" + input + \"' ein:\");\r\n                    count++;\r\n                }\r\n                if (value == null) {\r\n                    return;\r\n                }\r\n                sql = sql.replace(input, value);\r\n            }\r\n            s.sql = sql;\r\n        }\r\n\r\n        \r\n\r\n        /*\r\n        dropdownSQLs = re.findall(r'({[^}]+}\\[[^\\]]+\\])', sql)\r\n        dropdowns = []\r\n        for drop in dropdownSQLs:\r\n            name = re.findall(r'{(.*?)}', drop)[0]\r\n            dSql = re.findall(r'\\[(.*?)\\]', drop)[0]\r\n            cur = runSql(dSql, request.user.username)\r\n            vals = cur.fetchall()\r\n            v = [str(row).replace(\"(\", \"\").replace(\")\", \"\") for row in vals]\r\n            dropdowns.append({\r\n                'name': name,\r\n                'options': v\r\n            })*/\r\n\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                        database.statements = database.statements.concat(modifyingStatements);\r\n                        this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                        database.version += modifyingStatements.length;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n    \r\n                                workspace.database.version = 0;\r\n                                workspace.database.statements = [];\r\n                                main.networkManager.getNewStatements(workspace, () => {\r\n                                    this.resetDatabase(database);\r\n                                })\r\n\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results, statement.resultTypes); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(table: Table) {\r\n        let statement = \"select * from \" + table.identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => {\r\n                this.presentResultsIntern(statement, results, table.columns.map(c => c.type));\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = jQuery('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = jQuery('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = jQuery('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n        this.$bottomDiv.find('.jo_tabheading').removeClass('jo_active');\r\n        $runtimeErrorsTabHeading.addClass('jo_active');\r\n        $runtimeErrorsTab.addClass('jo_active');\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter, TokenType.keywordView].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[], columnTypes: SQLType[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n        this.resultColumnTypes = columnTypes;\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n\r\n        let typeIsBoolean: boolean[] = this.resultColumnTypes.map(t => {\r\n            return ['boolean', 'tinyint(1)'].indexOf(t.toString()) >= 0\r\n        })\r\n\r\n\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell, index) => {\r\n                        let stringValue = cell;\r\n                        if (typeIsBoolean[index]) {\r\n                            stringValue = cell == 1 ? 'true' : 'false';\r\n                        }\r\n                        $row.append(jQuery(`<td>${stringValue}</td>`))\r\n                    });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        \r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            let statementV1 =  monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n\r\n            if (statementV1.includes('{')) {\r\n                const model = monacoEditor.getModel();\r\n                const startOffset = model.getOffsetAt({\r\n                    lineNumber: statement.from.line,\r\n                    column: statement.from.column\r\n                });\r\n                const fullText = model.getValue();\r\n                const searchStart = startOffset;\r\n                let semicolonIndex = fullText.indexOf(';', searchStart);\r\n                if(semicolonIndex == -1) {\r\n                    console.log('no semicolon found');\r\n                    semicolonIndex = fullText.length;\r\n                }\r\n                if (semicolonIndex !== -1) {\r\n                    const semicolonPos = model.getPositionAt(semicolonIndex + 1);\r\n                    statement.to.line = semicolonPos.lineNumber;\r\n                    statement.to.column = semicolonPos.column;\r\n                }\r\n            }\r\n\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import jQuery from \"jquery\";\r\n\r\nexport type UserSettings = {\r\n    helperHistory: {\r\n    },\r\n    //    theme: string,  // old!\r\n    viewModes: ViewModes,\r\n    classDiagram: any\r\n}\r\n\r\nexport type ViewModes = {\r\n    presentation: ViewMode;\r\n    monitor: ViewMode;\r\n    viewModeChosen: \"presentation\" | \"monitor\"\r\n}\r\n\r\nexport type ViewMode = {\r\n    theme: string;\r\n    fontSize: number;\r\n    highContrast: boolean;\r\n}\r\n\r\n\r\nexport type WorkspaceSettings = {\r\n    libraries: string[]\r\n}\r\n\r\nexport type FileData = {\r\n    name: string,\r\n    id: number,\r\n    text: string,\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n    version: number,\r\n    workspace_id: number,\r\n    forceUpdate: boolean,\r\n    file_type: number\r\n}\r\n\r\nexport type WorkspaceData = {\r\n    id: number,\r\n    name: string,\r\n    path: string,\r\n    isFolder: boolean,\r\n    owner_id: number,\r\n    files: FileData[],\r\n    currentFileId?: number,\r\n    settings?: string,       // serialized WorkspaceSettings\r\n    sql_history: string,\r\n    permissions: number,\r\n    database_id: number\r\n}\r\n\r\nexport type CreateWorkspaceData = {\r\n    id: number,\r\n    name: string,\r\n    path: string,\r\n    isFolder: boolean,\r\n\r\n    template_database_id?: number,\r\n    template_id?: number,\r\n    secret?: string,\r\n    otherDatabaseId?: number\r\n}\r\n\r\n\r\n\r\nexport type Workspaces = {\r\n    workspaces: WorkspaceData[]\r\n}\r\n\r\n\r\nexport type UserData = {\r\n    id: number,\r\n    klasse_id: number,\r\n    schule_id: number,\r\n    is_teacher: boolean,\r\n    is_admin: boolean,\r\n    is_schooladmin: boolean,\r\n    username: string,\r\n    familienname: string,\r\n    rufname: string,\r\n    currentWorkspace_id?: number,\r\n    settings?: UserSettings,\r\n    password?: string,\r\n    is_testuser?: boolean,\r\n\r\n    vidis_sub?: string,\r\n    vidis_klasse?: string,\r\n    vidis_akronym?: string\r\n\r\n}\r\n\r\nexport function getUserDisplayName(user: UserData, lastNameFirst: boolean = false): string {\r\n    if(user.vidis_akronym){\r\n        if(user.username && user.username.length > 0) return user.username;\r\n        return user.vidis_akronym;\r\n    }\r\n    if(user.familienname?.length > 0 && user.rufname?.length > 0){\r\n        if(lastNameFirst) return user.familienname + \", \" + user.rufname;\r\n        return user.rufname + \" \" + user.familienname;\r\n    }\r\n    return user.username;\r\n}\r\n\r\nexport type GetUserDataRequest = {\r\n\r\n}\r\n\r\nexport type GetUserDataResponse = {\r\n    success: boolean,\r\n    user: UserData,\r\n    classdata: ClassData[], // null if !is_teacher\r\n    schoolName: string\r\n}\r\n\r\nexport type GetSchoolDataRequest = {\r\n    school_id: number\r\n}\r\n\r\nexport type GetSchoolDataResponse = {\r\n    success: boolean,\r\n    schoolData?: SchoolData[]\r\n}\r\n\r\nexport type GetClassesDataRequest = {\r\n    school_id: number\r\n}\r\n\r\nexport type GetClassesDataResponse = {\r\n    success: boolean,\r\n    classDataList: ClassData[]\r\n}\r\n\r\nexport type GetTeacherDataRequest = {\r\n    school_id: number\r\n}\r\n\r\nexport type GetTeacherDataResponse = {\r\n    success: boolean,\r\n    teacherData?: TeacherData[]\r\n}\r\n\r\nexport type ClassData = {\r\n    id: number,\r\n    lehrkraft_id: number,\r\n    schule_id: number,\r\n    name: string,\r\n    students: UserData[],\r\n    aktiv: boolean,\r\n    text?: string\r\n}\r\n\r\nexport type SchoolData = {\r\n    id: number,\r\n    name: string,\r\n    kuerzel: string,\r\n    classes: ClassData[]\r\n    usersWithoutClass: UserData[]\r\n}\r\n\r\nexport type TeacherData = {\r\n    userData: UserData,\r\n    classes: ClassData[]\r\n}\r\n\r\nexport type LoginRequest = {\r\n    username: string,\r\n    password: string,\r\n    language: number\r\n}\r\n\r\nexport type TicketLoginRequest = {\r\n    ticket: string,\r\n    language: number\r\n}\r\n\r\nexport type LoginResponse = {\r\n    success: boolean,\r\n    user: UserData,\r\n    classdata: ClassData[], // null if !is_teacher\r\n    workspaces: Workspaces,\r\n    csrfToken: string,\r\n    isTestuser: boolean\r\n}\r\n\r\nexport type LogoutRequest = {\r\n    currentWorkspaceId: number\r\n}\r\n\r\nexport type LogoutResponse = {\r\n    success: boolean\r\n}\r\n\r\nexport type SendUpdatesRequest = {\r\n    workspacesWithoutFiles: WorkspaceData[],\r\n    files: FileData[],\r\n    owner_id: number,\r\n    userId: number,\r\n    language: number,\r\n    currentWorkspaceId: number,\r\n    getModifiedWorkspaces: boolean\r\n}\r\n\r\nexport type SendUpdatesResponse = {\r\n    workspaces: Workspaces,\r\n    filesToForceUpdate: FileData[],\r\n    success: boolean\r\n}\r\n\r\nexport type UpdateUserSettingsRequest = {\r\n    settings: UserSettings,\r\n    current_workspace_id: number\r\n    userId: number\r\n}\r\n\r\nexport type UpdateUserSettingsResponse = {\r\n    success: boolean;\r\n\r\n}\r\n\r\n\r\nexport type CreateOrDeleteFileOrWorkspaceRequest = {\r\n    entity: \"workspace\" | \"file\",\r\n    type: \"create\" | \"delete\",\r\n    data?: CreateWorkspaceData | FileData, // in case of create\r\n    id?: number, // in case of delete\r\n    owner_id?: number, // in case of create\r\n    userId: number\r\n}\r\n\r\nexport type CRUDResponse = {\r\n    success: boolean,\r\n    id?: number, // in case of create\r\n    error: string\r\n}\r\n\r\nexport type CRUDUserRequest = {\r\n    type: \"create\" | \"update\" | \"delete\",\r\n    data?: UserData, // for create and update\r\n    ids?: number[], // for delete\r\n}\r\n\r\nexport type CRUDClassRequest = {\r\n    type: \"create\" | \"update\" | \"delete\",\r\n    data?: ClassData, // for create and update\r\n    ids?: number[], // for delete\r\n}\r\n\r\nexport type CRUDSchoolRequest = {\r\n    type: \"create\" | \"update\" | \"delete\",\r\n    data?: SchoolData, // for create and update\r\n    id?: number, // for delete\r\n}\r\n\r\nexport type BulkCreateUsersRequest = {\r\n    onlyCheckUsernames: boolean, \r\n    users: UserData[],\r\n    schule_id: number\r\n}\r\n\r\nexport type BulkCreateUsersResponse = {\r\n    success: boolean,\r\n    namesAlreadyUsed: string[],\r\n    message: string\r\n}\r\n\r\nexport type GetWorkspacesRequest = {\r\n    ws_userId: number,\r\n    userId: number,\r\n    language: number\r\n}\r\n\r\nexport type GetWorkspacesResponse = {\r\n    success: boolean,\r\n    workspaces: Workspaces\r\n}\r\n\r\nexport type ChangeClassOfStudentsRequest = {\r\n    student_ids: number[],\r\n    new_class_id: number\r\n}\r\n\r\nexport type ChangeClassOfStudentsResponse = {\r\n    success: boolean,\r\n    message: string\r\n}\r\n\r\n\r\n/**\r\n * Copies Workspace and returns copy.\r\n */\r\nexport type DuplicateWorkspaceRequest = {\r\n    workspace_id: number, // Workspace to copy\r\n    language: number\r\n}\r\n\r\nexport type DuplicateWorkspaceResponse = {\r\n    workspace: WorkspaceData, // new Workspace (with copied files)\r\n    message: string\r\n}\r\n\r\n/**\r\n * Creates Repository and links it with given workspace\r\n */\r\nexport type CreateRepositoryRequest = {\r\n    workspace_id: number, // Workspace to copy\r\n    publish_to: number // 0 == private, 1 == class, 2 == school\r\n}\r\n\r\nexport type CreateRepositoryResponse = {\r\n    message: string\r\n}\r\n\r\nexport type DeleteRepositoryRequest = {\r\n    repository_id: number\r\n}\r\n\r\nexport type DeleteRepositoryResponse = { success: boolean, message?: string };\r\n\r\n\r\n/**\r\n * Distributes given workspace to all students in given class\r\n */\r\nexport type DistributeWorkspaceRequest = {\r\n    workspace_id: number, // Workspace to copy\r\n    database_as_template_id: number, \r\n    class_id: number,\r\n    student_ids: number[]\r\n}\r\n\r\nexport type DistributeWorkspaceResponse = {\r\n    message: string\r\n}\r\n\r\n\r\nexport type GetStatisticsRequest = {\r\n    now: boolean\r\n}\r\n\r\nexport type StatisticData = {\r\n    users: number,\r\n    memory: number,\r\n    time: string,\r\n    requestsPerMinute: number,\r\n    userlist?: string[],\r\n    webSocketSessionCount: number,\r\n    webSocketClientCount: number,\r\n    webSocketRequestPerSecond: number,\r\n    performanceDataList: PerformanceData[]\r\n}\r\n\r\nexport type PerformanceData = {\r\n    url: string;\r\n    sumTime: number;\r\n    count: number;\r\n}\r\n\r\nexport type CollectPerformanceDataRequest = {\r\n    data: PerformanceData[]\r\n}\r\n\r\nexport type GetStatisticsResponse = {\r\n    success: boolean,\r\n    statisticPeriodSeconds: number,\r\n    data: StatisticData[]\r\n}\r\n\r\nexport type RepositoryFileEntry = {\r\n    id: number,\r\n    version: number,\r\n    filename: string,\r\n    text: string\r\n}\r\n\r\nexport type RepositoryHistoryFileEntry = {\r\n    id: number,\r\n    version: number,\r\n    type: \"change\" | \"create\" | \"delete\" | \"intermediate\",\r\n    filename?: string, // if type == \"create\" || type == \"intermediate\" || type == \"change\" and filename has changed\r\n    content?: string, // if type == \"create\" || type == \"intermediate\"\r\n    changeSet?: string // if \"change\" and not only filename has changed\r\n}\r\n\r\nexport type RepositoryHistoryEntry = {\r\n    timestamp: string,\r\n    version: number,\r\n    userId: number,\r\n    username: string,\r\n    name: string,\r\n    comment: string,\r\n    isIntermediateEntry: boolean, // true, if entry contains complete code of all files\r\n    historyFiles: RepositoryHistoryFileEntry[]\r\n}\r\n\r\n\r\nexport type Repository = {\r\n    id: number,\r\n    name: string,\r\n    owner_id: number,\r\n    schule_id: number,\r\n    files: string,\r\n\r\n    fileEntries?: RepositoryFileEntry[], // deserialized field files\r\n\r\n    history: string,\r\n\r\n    historyEntries?: RepositoryHistoryEntry[],\r\n\r\n    version: number,\r\n    published_to: number,\r\n    description: string\r\n}\r\n\r\n\r\nexport type GetRepositoryRequest = {\r\n    repository_id: number,\r\n    workspace_id: number\r\n}\r\n\r\nexport type GetRepositoryResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repository: Repository\r\n}\r\n\r\nexport type CommitFilesRequest = {\r\n    repository_id: number,\r\n    workspace_id: number,\r\n    repositoryHistoryEntry: RepositoryHistoryEntry,\r\n    files: RepositoryFileEntry[], // current state of workspace files\r\n    repositoryVersionBeforeCommit: number,\r\n    newlyVersionedFileIds: number[]\r\n}\r\n\r\nexport type CommitFilesResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repositoryOutOfSync: boolean,\r\n    repository: Repository\r\n};\r\n\r\nexport type RepositoryUser = {\r\n    user_id: number,\r\n    username: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    klasse: string,\r\n    canWrite: boolean\r\n}\r\n\r\nexport type GetRepositoryUserListRequest = {\r\n    repository_id: number\r\n}\r\n\r\nexport type GetRepositoryUserListResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repositoryUserList: RepositoryUser[]\r\n}\r\n\r\nexport type RepositoryInfo = {\r\n    id: number,\r\n    name: string,\r\n    owner_id: number,\r\n    owner_name: string,\r\n    owner_username: string,\r\n    schule_id: number,\r\n    klasse_id: number,\r\n    version: number,\r\n    published_to: number,\r\n    description: string\r\n}\r\n\r\nexport type GetRepositoryListRequest = {\r\n    onlyOwnRepositories: boolean\r\n}\r\n\r\nexport type GetRepositoryListResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repositories: RepositoryInfo[]\r\n}\r\n\r\nexport type UpdateRepositoryRequest = {\r\n    repository_id: number,\r\n    owner_id: number,\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number,\r\n    description: string,\r\n    name: string\r\n}\r\n\r\nexport type UpdateRepositoryResponse = {\r\n    success: boolean,\r\n    message: string\r\n}\r\n\r\nexport type AttachWorkspaceToRepositoryRequest = {\r\n    createNewWorkspace: boolean,\r\n    workspace_id?: number,\r\n    repository_id: number\r\n}\r\n\r\nexport type AttachWorkspaceToRepositoryResponse = { message?: string, new_workspace?: WorkspaceData };\r\n\r\nexport type RepositoryUserWriteAccessData = {\r\n    user_id: number,\r\n    has_write_access: boolean\r\n}\r\n\r\nexport type UpdateRepositoryUserWriteAccessRequest = {\r\n    repository_id: number,\r\n    writeAccessList: RepositoryUserWriteAccessData[]\r\n}\r\n\r\nexport type UpdateRepositoryUserWriteAccessResponse = { success: boolean, message: string }\r\n\r\nexport type GainRepositoryLockRequest = { repository_id: number }\r\n\r\nexport type GainRepositoryLockResponse = { success: boolean, message: string }\r\n\r\nexport type LeaseRepositoryLockRequest = { repository_id: number }\r\n\r\nexport type LeaseRepositoryLockResponse = { success: boolean, message: string }\r\n\r\n\r\n\r\n// WebSocket\r\n\r\nexport type GetWebSocketTokenResponse = { success: boolean, token?: string }\r\n\r\nexport type WebSocketRequestConnect = {\r\n    command: 1,\r\n    token: string,\r\n    databaseId: number,\r\n    workspaceId: number, \r\n    databaseVersion: number\r\n}\r\n\r\nexport type WebSocketRequestGetNewStatements = {\r\n    command: 2\r\n    databaseVersion: number\r\n}\r\n\r\nexport type WebSocketRequestDisconnect = {\r\n    command: 4\r\n}\r\n\r\nexport type WebSocketRequestKeepAlive = {\r\n    command: 5\r\n}\r\n\r\nexport type WebSocketResponse = WebSocketResponseSendingStatements | WebSocketResponseDisconnect | \r\n   WebSocketResponseKeepAlive | WebSocketResponseRollback;\r\n\r\nexport type WebSocketResponseSendingStatements = {\r\n    command: 2,\r\n    firstNewStatementIndex: number,  // -1 => Database doesn't exist\r\n    newStatements: string[]\r\n}\r\n\r\nexport type WebSocketResponseDisconnect = {\r\n    command: 3\r\n}\r\n\r\nexport type WebSocketResponseKeepAlive = {\r\n    command: 4\r\n}\r\n\r\nexport type WebSocketResponseRollback = {\r\n    command: 5,\r\n    new_version: number\r\n}\r\n\r\n\r\nexport type DatabaseData = {\r\n    id: number,\r\n    name: string,\r\n    owner_id: number,\r\n    schule_id: number,\r\n    based_on_template_id: number,\r\n    template: DatabaseData,\r\n    statements: string[],\r\n    published_to: number,\r\n    description: string,\r\n    id_old_version_of_id: number\r\n}\r\n\r\nexport type GetDatabaseRequest = {\r\n    workspaceId: number\r\n}\r\n\r\nexport type getDatabaseResponse = {\r\n    success: boolean,\r\n    database: DatabaseData,\r\n    version: number,\r\n    error: string\r\n}\r\n\r\nexport type GetNewStatementsRequest = {\r\n    workspaceId: number,\r\n    version_before: number\r\n}\r\n\r\nexport type GetNewStatementsResponse = {\r\n    success: Boolean,\r\n    newStatements: string[],\r\n    firstNewStatementIndex: number,\r\n    rollbackToVersion: number\r\n}\r\n\r\nexport type AddDatabaseStatementsRequest = {\r\n    workspaceId: number,\r\n    version_before: number,\r\n    statements: string[]\r\n}\r\n\r\nexport type AddDatabaseStatementsResponse = {\r\n        success: Boolean,\r\n        statements_before: string[],\r\n        new_version: number\r\n}\r\n    \r\nexport type TemplateListEntry = {\r\n    id: number,\r\n    name: string,\r\n    published_to: number,\r\n    description: string,\r\n    ownerName: string,\r\n    ownerId: number,\r\n    $tle: JQuery<HTMLDivElement>\r\n}\r\n\r\nexport type GetTemplateListRequest = {\r\n    user_id: number\r\n}\r\n\r\nexport type GetTemplateListResponse = {\r\n    success: boolean,\r\n    error: string,\r\n    templateList: TemplateListEntry[]\r\n}\r\n\r\nexport type GetDatabaseSettingsRequest = {\r\n    workspaceId: number\r\n}\r\n\r\nexport type Secrets = {\r\n    read: string,\r\n    write: string,\r\n    ddl: string\r\n}\r\n\r\nexport type GetDatabaseSettingsResponse = {\r\n    success: boolean,\r\n    workspaceId: number,\r\n    secrets: Secrets,\r\n    publishedTo: number,\r\n    owner: string,\r\n    userIsOwner: boolean,\r\n    error: string\r\n}\r\n\r\nexport type setDatabaseSecretRequest = {\r\n    workspaceId: number,\r\n    secretKind: string\r\n}\r\n\r\nexport type SetDatabaseSecretResponse = {\r\n    success: boolean,\r\n    secret: string,\r\n    error: string\r\n}\r\n\r\nexport type SetPublishedToRequest = {\r\n    workspaceId: number,\r\n    publishedTo: number,\r\n    databaseName: string,\r\n    description: string\r\n}\r\n\r\nexport type SetPublishedToResponse = {\r\n    success: boolean,\r\n    error: string\r\n}\r\n\r\nexport type GetTemplateRequest = {\r\n    workspaceId: number\r\n}\r\n\r\nexport type RollbackRequest = {\r\n    workspaceId: number,\r\n    version: number \r\n}\r\n\r\nexport type RollbackResponse = {\r\n    success: Boolean,\r\n    new_version: number,\r\n    message: string\r\n}\r\n\r\nexport type UploadTemplateResponse = {\r\n    success: boolean, \r\n    newTemplateId?: number\r\n}\r\n\r\nexport type RegisterLongPollingListenerRequest = {\r\n    workspaceId: number\r\n}\r\n\r\nexport type LongPollingListenerResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    firstNewStatementIndex?: number,\r\n    newStatements?: string[]\r\n}\r\n\r\nexport type RegisterDatabaseSSEListenerRequest = { workspaceId: number, registerOrUnregister: \"register\" | \"unregister\" }\r\n\r\nexport type RegisterDatabaseSSEListenerResponse = { success: boolean, message: string }\r\n\r\nexport type DatabaseChangedSSEMessage = {\r\n    databaseId: number,\r\n    firstNewStatementIndex?: number,\r\n    newStatements?: string[],\r\n    rollbackToVersion?: number\r\n}\r\n","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces, getUserDisplayName } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentOwnWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(this.currentOwnWorkspace);\r\n        }\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if(a.vidis_akronym && b.vidis_akronym){\r\n                return getUserDisplayName(a) > getUserDisplayName(b) ? 1 : -1;\r\n            }\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: getUserDisplayName(ud, true),\r\n                sortName: ud.vidis_akronym ? getUserDisplayName(ud) : ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewMode } from \"../../communication/Data\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import jQuery from \"jquery\";\r\n\r\nexport class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        $waitDiv.css('display', 'none');\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper\";\r\nimport { LogoutRequest } from \"../communication/Data\";\r\nimport { Login } from \"./Login\";\r\n\r\nexport class AutoLogout {\r\n\r\n    logoutAfterMinutes: number = 20;\r\n    counterInMinutes: number = this.logoutAfterMinutes;\r\n\r\n    constructor(login?: Login) {\r\n        let that = this;\r\n        setInterval(() => {\r\n            that.counterInMinutes--;\r\n            if (that.counterInMinutes == 0) {\r\n                if (login) {\r\n                    login.logout();\r\n                } else {\r\n                    that.logout();\r\n                }\r\n            }\r\n        }, 60 * 1000);\r\n\r\n        document.body.addEventListener(\"keydown\", () => {\r\n            that.reset();\r\n        });\r\n\r\n        document.body.addEventListener(\"mousedown\", () => {\r\n            that.reset();\r\n        })\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.counterInMinutes = this.logoutAfterMinutes;\r\n    }\r\n    \r\n    \r\n    logout() {\r\n        let logoutRequest: LogoutRequest = {\r\n            currentWorkspaceId: null\r\n        }\r\n\r\n        ajax('logout', logoutRequest, () => {\r\n            window.location.href = 'index.html';\r\n        });\r\n\r\n    }\r\n\r\n}","import jQuery from \"jquery\";\r\n\r\nexport type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/graphics/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { getUserDisplayName, LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { PushClientManager } from \"../communication/pushclient/PushClientManager.js\";\r\nimport { AutoLogout } from \"./AutoLogout.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class Login {\r\n\r\n    loggedInWithVidis: boolean = false;\r\n\r\n    constructor(private main: Main) {\r\n        new AutoLogout(this);\r\n    }\r\n\r\n    loginWithVidis(singleUseToken: string) {\r\n        this.loggedInWithVidis = true;\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(singleUseToken);\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n\r\n            this.sendLoginRequest();\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.logout();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    logout() {\r\n        this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n        if (this.main.workspacesOwnerId != this.main.user.id) {\r\n            this.main.projectExplorer.onHomeButtonClicked();\r\n        }\r\n\r\n        PushClientManager.getInstance().close();\r\n\r\n        this.main.networkManager.sendUpdates(() => {\r\n\r\n            this.main.notifier.connect(null);\r\n\r\n            let logoutRequest: LogoutRequest = {\r\n                currentWorkspaceId: this.main.currentWorkspace?.id\r\n            }\r\n\r\n            this.main.networkManager.sendUpdateUserSettings(() => {\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    if (this.loggedInWithVidis) {\r\n                        // window.location.assign(\"https://aai-test.vidis.schule/auth/realms/vidis/protocol/openid-connect/logout?ID_TOKEN_HINT=\" + this.main.user.vidis_sub + \"&post_logout_redirect_uri=https%3A%2F%2Fwww.sql-ide.de\");\r\n                        window.location.assign(\"https://aai.vidis.schule/auth/realms/vidis/protocol/openid-connect/logout?ID_TOKEN_HINT=\" + this.main.user.vidis_sub + \"&post_logout_redirect_uri=https%3A%2F%2Fwww.sql-ide.de\");\r\n                    } else {\r\n                        jQuery('#login').show();\r\n                        this.main.waitOverlay.hide();\r\n                        jQuery('#login-message').empty();\r\n                        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                        this.main.projectExplorer.fileListPanel.clear();\r\n                        this.main.projectExplorer.workspaceListPanel.clear();\r\n\r\n                        this.main.databaseExplorer.clear();\r\n                        this.main.resultsetPresenter.clear();\r\n\r\n                        if (this.main.user.is_teacher) {\r\n                            this.main.teacherExplorer.removePanels();\r\n                            this.main.teacherExplorer = null;\r\n                        }\r\n\r\n\r\n                        this.main.currentWorkspace = null;\r\n                        this.main.user = null;\r\n                    }\r\n\r\n\r\n\r\n                });\r\n\r\n\r\n            });\r\n\r\n        }, true);\r\n\r\n    }\r\n\r\n\r\n    sendLoginRequest(singleUseToken?: string) {\r\n\r\n        let that = this;\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n        $loginSpinner.show();\r\n\r\n        let loginRequest: LoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 1\r\n        }\r\n\r\n        ajax('login' + (singleUseToken ? ('?singleUseToken=' + singleUseToken) : ''), loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n            } else {\r\n\r\n                PushClientManager.getInstance().open();\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n\r\n                this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                let user: UserData = response.user;\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n\r\n                this.main.waitForGUICallback = () => {\r\n\r\n                    let user: UserData = response.user;\r\n\r\n                    that.main.mainMenu.initGUI(user);\r\n\r\n                    that.main.waitOverlay.hide();\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(getUserDisplayName(user));\r\n\r\n                    new UserMenu(that.main).init();\r\n\r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n\r\n                    that.main.user = user;\r\n\r\n                    that.main.restoreWorkspaces(response.workspaces);\r\n                    that.main.workspacesOwnerId = user.id;\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    that.main.networkManager.initializeSSE();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax, ajaxAsync, csrfToken } from \"./AjaxHelper.js\";\r\nimport { DatabaseChangedSSEMessage as DatabaseChangedPushMessage, GetNewStatementsRequest, GetNewStatementsResponse, RegisterDatabaseSSEListenerRequest as RegisterPushClientForDatabaseRequest } from \"./Data.js\";\r\nimport { PushClientManager } from \"./pushclient/PushClientManager.js\";\r\n\r\nexport class NewNotifier {\r\n\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n\r\n    }\r\n\r\n    async connect(workspace: Workspace) {\r\n\r\n        if(this.workspace != null){\r\n            let unregisterRequest: RegisterPushClientForDatabaseRequest = { workspaceId: this.workspace.id, registerOrUnregister: \"unregister\" }\r\n            await ajaxAsync(\"servlet/registerPushClientForDatabase\", unregisterRequest);\r\n        }\r\n\r\n        this.workspace = workspace;\r\n        \r\n        if(workspace == null){\r\n            PushClientManager.unsubscribe(\"onOpen\");\r\n            return;\r\n        } \r\n        \r\n        this.database = workspace.database;\r\n\r\n        let request: RegisterPushClientForDatabaseRequest = { workspaceId: workspace.id, registerOrUnregister: \"register\" }\r\n        ajaxAsync(\"servlet/registerPushClientForDatabase\", request);\r\n\r\n        PushClientManager.subscribe(\"broadcastDatabaseChange\", (data: DatabaseChangedPushMessage) => {\r\n            if(data.databaseId == this.workspace.databaseId){\r\n                if (data.rollbackToVersion != null) {\r\n                    this.main.getHistoryViewer().rollbackLocal(data.rollbackToVersion);\r\n                } else {\r\n                    this.executeNewStatements(data.newStatements, data.firstNewStatementIndex, () => {\r\n                        this.getNewStatementsHttp();\r\n                    })\r\n                }\r\n            } else {\r\n                request.registerOrUnregister = \"unregister\";\r\n                ajaxAsync(\"servlet/registerPushClientForDatabase\", request);\r\n                PushClientManager.unsubscribe(\"onOpen\");\r\n            }\r\n        })\r\n\r\n        PushClientManager.subscribe(\"onOpen\", () => {            \r\n            request.registerOrUnregister = \"register\";\r\n            ajaxAsync(\"servlet/registerPushClientForDatabase\", request);\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","export function setCookie(name: string,value: string, seconds: number) {\r\n    var expires = \"\";\r\n    if (seconds) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (seconds*1000));\r\n        expires = \"; expires=\" + date.toUTCString();\r\n    }\r\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../sqljs-worker/DatabaseTools.js\";\r\nimport { checkIfMousePresent, getCookieValue } from \"../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\n\r\nimport * as monaco from 'monaco-editor';\r\nimport { NewNotifier } from \"../communication/NewNotifier.js\";\r\nimport { setCookie } from \"../tools/HttpTools.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: NewNotifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n\r\n        let singleUseToken1 = location.search.split('singleUseToken=')[1];\r\n        if(singleUseToken1){\r\n            setCookie(\"singleUseToken\", singleUseToken1, 3);\r\n        }\r\n\r\n        let singleUseToken: string | undefined = getCookieValue(\"singleUseToken\");\r\n\r\n        if(singleUseToken){\r\n            setCookie(\"singleUseToken\", \"\", 0);\r\n            this.login.initGUI();\r\n            this.login.loginWithVidis(singleUseToken);    \r\n        } else {\r\n            this.login.initGUI();\r\n        }\r\n\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new NewNotifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        jQuery(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id && !ws.isFolder) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            for(let ws of this.workspaceList){\r\n                if(!ws.isFolder){\r\n                    currentWorkspace = this.workspaceList[0];\r\n                    \r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace, null, true);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\nimport * as monaco from 'monaco-editor'\r\n\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.main.getResultsetPresenter().showErrorDecorations([]);\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                // if (error.quickFix != null) {\r\n                //     let quickFix = error.quickFix;\r\n                //     let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                //     linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                //     this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                //     onClickFunction: () => {\r\n\r\n                //         let edits = quickFix.editsProvider(m.model.uri);\r\n                //         editor.executeEdits(\"\", edits.map((edit) => {\r\n                //             let r = edit.edit.range;\r\n                //             return {\r\n                //                 range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                //                 text: edit.edit.text,\r\n                //                 forceMoveMarkers: true\r\n                //             }\r\n                //         }\r\n                //         ));\r\n\r\n                //     },\r\n                //     title: quickFix.title\r\n                // })\r\n\r\n\r\n                // }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import * as monaco from 'monaco-editor';\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { dateToStringWithoutTime, stringToDate } from \"../../tools/StringTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport jQuery from \"jquery\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"../sqljs-worker/DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\nimport jQuery from \"jquery\";\r\nimport pako from 'pako'\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array<ArrayBuffer>,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        /*let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }*/\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        //this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array<ArrayBuffer>> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n        \r\n        //let cache = await caches.open('my-cache');\r\n\r\n        let value = null;// await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array<ArrayBuffer> | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n        // @ts-ignore\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return false;\r\n    }\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\nimport markdownit from 'markdown-it';\r\nimport * as monaco from 'monaco-editor'\r\nimport jQuery from \"jquery\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"sql\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"sql\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    constructor(private databaseIdentifier: string){\r\n\r\n    }\r\n\r\n    public open(successCallback: () => void) {\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public writeDatabase(databaseID: string, database: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.put({\r\n            databaseId: databaseID,\r\n            database: database\r\n        });\r\n\r\n    }\r\n\r\n    public removeDatabase(databaseId: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.delete(databaseId);\r\n\r\n    }\r\n\r\n\r\n    public getDatabase(databaseId: string, callback: (database: string) => void){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        let request = databaseObjectStore.get(databaseId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.database);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Module } from \"../compiler/parser/Module\";\r\nimport { MainEmbedded } from \"./MainEmbedded\";\r\n\r\ninterface IDEFileAccess {\r\n    getName(): string;\r\n    getText(): string;\r\n}\r\n\r\ninterface SingleIDEAccess {\r\n    getFiles(): IDEFileAccess[];\r\n    forceReload(): void;\r\n}\r\n\r\ninterface OnlineIDEAccess {\r\n    getIDE(id: string): SingleIDEAccess | undefined;\r\n}\r\n\r\n\r\nexport class IDEFileAccessImpl implements IDEFileAccess {\r\n    constructor(private module: Module){\r\n\r\n    }\r\n\r\n    getName(): string {\r\n        return this.module.file.name;\r\n    }\r\n    getText(): string {\r\n        return this.module.getProgramTextFromMonacoModel();\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport class SingleIDEAccessImpl implements SingleIDEAccess {\r\n    \r\n    constructor(private ide: MainEmbedded){\r\n        this.ide = ide;\r\n    }\r\n\r\n    getFiles(): IDEFileAccess[] {\r\n        return this.ide.getCurrentWorkspace().moduleStore.getModules(false).map(file => new IDEFileAccessImpl(file));        \r\n    }\r\n\r\n    forceReload(): void {\r\n        this.ide.forceReload();\r\n    }\r\n\r\n    getDatabase() {\r\n    const dbTool = this.ide.getDatabaseTool();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        dbTool.export(\r\n            (db) => {\r\n                // @ts-ignore\r\n                const buffer = db.buffer instanceof ArrayBuffer ? db.buffer : new ArrayBuffer(db.buffer.byteLength);\r\n                if (!(db.buffer instanceof ArrayBuffer)) {\r\n                    new Uint8Array(buffer).set(new Uint8Array(db.buffer));\r\n                }\r\n                const blob = new Blob([new Uint8Array(buffer)], { type: 'application/octet-stream' });\r\n                resolve(blob);\r\n            },\r\n            (error) => {\r\n                reject(\"Export failed: \" + error);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\n}\r\n\r\nexport class OnlineIDEAccessImpl implements OnlineIDEAccess {\r\n    \r\n    private static  ideMap: Map<string, SingleIDEAccessImpl> = new Map();\r\n\r\n    public static registerIDE(ide: MainEmbedded){\r\n        OnlineIDEAccessImpl.ideMap.set(ide.config.id!,  new SingleIDEAccessImpl(ide));\r\n    }\r\n    \r\n    getIDE(id: string): SingleIDEAccess | undefined {\r\n        return OnlineIDEAccessImpl.ideMap.get(id);\r\n    }\r\n\r\n}","import jQuery from \"jquery\";\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../sqljs-worker/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","export default \"data:image/svg+xml,%3csvg%20width='105'%20height='105'%20viewBox='0%200%20105%20105'%20xmlns='http://www.w3.org/2000/svg'%20fill='%23fff'%3e%3ccircle%20cx='12.5'%20cy='12.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='0s'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='12.5'%20cy='52.5'%20r='12.5'%20fill-opacity='.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='100ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='52.5'%20cy='12.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='300ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='52.5'%20cy='52.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='600ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='92.5'%20cy='12.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='800ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='92.5'%20cy='52.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='400ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='12.5'%20cy='92.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='700ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='52.5'%20cy='92.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='500ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3ccircle%20cx='92.5'%20cy='92.5'%20r='12.5'%3e%3canimate%20attributeName='fill-opacity'%20begin='200ms'%20dur='1s'%20values='1;.2;1'%20calcMode='linear'%20repeatCount='indefinite'%20/%3e%3c/circle%3e%3c/svg%3e\"","import * as monaco from 'monaco-editor';\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\r\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../sqljs-worker/DatabaseTools.js\";\r\nimport { makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { OnlineIDEAccessImpl } from \"./EmbeddedInterface.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\r\n\r\nimport gridUrl from '/include/graphics/grid.svg';\r\n\r\nimport jQuery from \"jquery\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withOutput?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string,\r\n    databaseURL?: string,\r\n    enableFileAccess?: boolean\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer(): DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    $dbTreeDiv: JQuery<HTMLElement>;\r\n\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $codeResetButton: JQuery<HTMLElement>;\r\n    $databaseResetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    waitOverlay: WaitOverlay;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    writeQueryManager: WriteQueryManager;\r\n\r\n    historyViewer: HistoryViewer;\r\n\r\n    initialTemplateDump: Uint8Array;\r\n    initialStatements: string[];\r\n\r\n    fetcher: DatabaseFetcher;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.writeQueryManager = new WriteQueryManager(this, (this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL) + this.config.id);\r\n\r\n        this.initGUI($div);\r\n\r\n\r\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\r\n        this.databaseTool = new DatabaseTool(this);\r\n        if (this.config.databaseURL != null) {\r\n            this.fetcher = new DatabaseFetcher(this);\r\n            this.forceReload();\r\n        } else {\r\n            this.initDatabase();\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        if (this.config.enableFileAccess) {\r\n            //@ts-ignore\r\n            window.sql_ide_access = new OnlineIDEAccessImpl();\r\n            OnlineIDEAccessImpl.registerIDE(this);\r\n        }\r\n        else {\r\n        }\r\n\r\n\r\n    }\r\n\r\n    initDatabase() {\r\n        this.resetDatabase(() => {\r\n            this.initScripts();\r\n\r\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    resetDatabase(callback: () => void) {\r\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\r\n            this.writeQueryManager.databaseReady(this.databaseTool);\r\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n            callback();\r\n        })\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"sql-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = false;\r\n        if (this.config.withOutput == null) this.config.withOutput = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withOutput = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.databaseURL != null) {\r\n            ['http:', 'https:'].forEach(protocol => {\r\n                if (this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")) {\r\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"sql\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$codeResetButton.fadeIn(1000);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"sql\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n\r\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\r\n        // $div.append($topDiv);\r\n        $div.append($centerDiv);\r\n\r\n        let $waitDiv = this.makeWaitDiv();\r\n        $div.append($waitDiv);\r\n        this.waitOverlay = new WaitOverlay($waitDiv);\r\n\r\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\r\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\r\n        this.$monacoDiv.append(this.$codeResetButton);\r\n\r\n        // $topDiv.append($editorDiv);\r\n\r\n        this.$codeResetButton.hide();\r\n\r\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\r\n\r\n        this.$databaseResetButton.hide();\r\n\r\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n        $bottomDiv.append($bottomDivInner);\r\n        if (this.config.withFileList) {\r\n            let $filesDiv = this.makeFilesDiv();\r\n            $bottomDiv.prepend($filesDiv);\r\n            new EmbeddedSlider($filesDiv, false, false, () => { });\r\n        }\r\n        // makeTabs($bottomDivInner);\r\n        $div.append($bottomDiv);\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        $centerDiv.append($editorDiv, $bottomDiv)\r\n        $div.append($rightDiv);\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\r\n\r\n        //$controlsDiv.append($infoButton);\r\n\r\n        this.$rightDivInner.append($rightSideContainer);\r\n\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            this.editor.editor.layout();\r\n        }, $centerDiv);\r\n\r\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n\r\n        $infoButton.on('mouseup', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        let $openInputButton = $buttonOpen.find('input');\r\n\r\n        $openInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadDatabaseFromFile(files[0]).then(() => {\r\n                $openInputButton.val(null)\r\n            })\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\r\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\r\n\r\n\r\n        new ProgramControlButtons(this, $controlsDiv);\r\n\r\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\r\n\r\n        setTimeout(() => {\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    saveDatabaseToFile() {\r\n        new DatabaseImportExport().saveToFile(this.databaseTool);\r\n    }\r\n\r\n    async loadDatabaseFromFile(file: globalThis.File) {\r\n        let dbImportExport = new DatabaseImportExport();\r\n        let db = await dbImportExport.loadFromFile(file, this);\r\n        if (db == null) {\r\n            alert('Es ist ein Fehler beim Import aufgetreten.');\r\n            return;\r\n        } else {\r\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\r\n                if (errors.length > 0) {\r\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\r\n                    console.log(errors)\r\n                }\r\n            }, () => {\r\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\r\n            })\r\n        }\r\n        return;\r\n    }\r\n\r\n    makeWaitDiv(): JQuery<HTMLElement> {\r\n\r\n        let waitHtml = `\r\n        <div class=\"bitteWarten\">\r\n        <div style=\"margin-bottom: 30px\">\r\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        <div>\r\n            <img src=\"${gridUrl}\" alt=\"\" style=\"height: 40px\">\r\n        </div>\r\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        `;\r\n        return jQuery(waitHtml);\r\n    }\r\n\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$codeResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_databaseResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_databaseResetModalButtons\">\r\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\r\n\r\n            $window.hide();\r\n            this.resetDatabase(() => {\r\n                this.writeQueryManager.reset();\r\n            });\r\n\r\n            this.$databaseResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.version++;\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$codeResetButton.fadeIn(1000);\r\n        }\r\n    }\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\r\n\r\n        $thLeftSide.append($buttonDiv);\r\n        $tabheadings.append($thLeftSide);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\r\n        // $tabheadings.append($thRuntimeError);\r\n\r\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">History</div>');\r\n        $tabheadings.append($thHistory);\r\n\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\r\n            <div class=\"jo_result-inner\">\r\n                <div class=\"jo_result-header\"></div>\r\n                <div class=\"jo_scrollable jo_result-body\"></div>\r\n            </div>\r\n            </div>\r\n    `);\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\r\n        // $tabs.append($tabRtErrors);\r\n\r\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\r\n        $tabs.append($tabHistory);\r\n\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\r\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\r\n        $tabheadings.append($thRun, //$thVariables\r\n        );\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\r\n\r\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\r\n\r\n        $tabs.append(this.$dbTreeDiv //, $vd\r\n        );\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    public forceReload(): void {\r\n        if(this.fetcher == null || this.config.databaseURL == null) return;\r\n        this.fetcher.load(this.config.databaseURL).then((loadableDb) => {\r\n            this.initialTemplateDump = loadableDb.binDump;\r\n            this.initDatabase();\r\n        }).catch((error: string) => {\r\n            alert('Fehler beim Landen der Datenbank: ' + error)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport jQuery from \"jquery\";\r\n\r\nimport editorWorker from 'monaco-editor/esm/vs/editor/editor.worker?worker'\r\nimport jsonWorker from 'monaco-editor/esm/vs/language/json/json.worker?worker'\r\nimport cssWorker from 'monaco-editor/esm/vs/language/css/css.worker?worker'\r\nimport htmlWorker from 'monaco-editor/esm/vs/language/html/html.worker?worker'\r\nimport tsWorker from 'monaco-editor/esm/vs/language/typescript/ts.worker?worker'\r\n\r\nimport '/include/css/editor.css';\r\nimport '/include/css/bottomdiv.css';\r\nimport '/include/css/run.css';\r\nimport '/include/css/icons.css';\r\nimport '/include/css/databaseExplorer.css';\r\nimport '/include/css/embedded.css';\r\n\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"sql\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nfunction initMonacoEditor(): void {\r\n    // see https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#using-vite\r\n    // https://dev.to/lawrencecchen/monaco-editor-svelte-kit-572\r\n    // https://github.com/microsoft/monaco-editor/issues/4045\r\n\r\n    self.MonacoEnvironment = {\r\n        getWorker: (_workerId, label) => {\r\n            switch (label) {\r\n                case 'json':\r\n                    return new jsonWorker()\r\n                case 'css':\r\n                case 'scss':\r\n                case 'less':\r\n                    return new cssWorker()\r\n                case 'html':\r\n                case 'handlebars':\r\n                case 'razor':\r\n                    return new htmlWorker()\r\n                case 'typescript':\r\n                case 'javascript':\r\n                    return new tsWorker()\r\n                default:\r\n                    return new editorWorker()\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n\r\n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"sql\";\r\n                if ($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    initMonacoEditor();\r\n\r\n    embeddedStarter.initEditor();\r\n    embeddedStarter.initGUI();\r\n\r\n    //@ts-ignore\r\n    console.log(\"SQL-IDE embedded Version \" + APP_VERSION + \" vom \" + BUILD_DATE);\r\n\r\n});\r\n"],"names":["TokenType","TokenTypeReadable","specialCharList","keywordList","EscapeSequenceList","endChar","Lexer","__publicField","input","bracketOpen","bracketClosed","tt","openBracket","correspondingBracket","error","char","specialCharToken","line","column","s","text","length","t","tripel","newLength","errorLevel","a","base","charCode","posStart","posEnd","escapeChar","beginChar","hex","lastCharWasNewline","commentStart","i","sign","firstChar","radix","exponent","posExponentStart","exponentString","value","Formatter","monaco.languages","model","position","ch","options","token","edits","e","e1","delta","monaco.editor","tokenlist","lastNonSpaceToken","indentLevel","tabSize","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","lastTokenWasNewLine","roundBracketsOpen","token1","openedAtLine","nextToken1","nextToken2","lastToken1","lastToken2","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","greaterGeneric","tokenBefore","spaces","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","name","theme","root","key","highlightColor","SQLType","_SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","ownIndex","baseTypes","tokenType","secondType","resultType","isCommutative","map","type2","bt2","SQLTextEnumType","SQLNumberEnumType","operator","booleanType","value1","value2","SQLBaseType","values","ci","pv","v","tens","SQLDerivedType","baseType","parameterValues","parameters","returnBaseType","result","textTypes","varcharType","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","nk","numericType","doubleType","realType","floatType","inttypes","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","_Parser","m","lastToken","skip","invokeSemicolonAngel","expectedValuesArray","expectedTokens","p","op","ret","found","deltaColumns","tpos","deltaInsideToken","tokenPos","mainProgram","afterLastStatement","semicolonAfterLastStatement","oldPos","errorsBeforeStatement","startPosition","st","hasErrors","beginStatementTokens","firstBadToken","expectSemicolon","retStatements","node","unique","fki","pos0","pos1","kind","modifyColumnInfo","index","first","ifNotExists","identifier","columnIdentifiers","selectStatement","pos2","primaryKeyAlreadyDefined","columnNode","columns","c","uniqueConstraint","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","type","constants","constant","identifierPos","mappedIdentifier","alreadySeenKeywords","rightBracketPosition","selectNode","insideListTokens","outerFirst","leftBracketPosition","lv","constantNode","columnListStart","columnListKeywordArray","hasFrom","fromListKeywordArray","dontHint","hintEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","orderStart","numberOfRows","ln","gbn","tokenTypesAfterGroupBy","obnList","obn","leftSide","rightSide","comesKeywordAs","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","precedence","left","operators","right","secondOperand","thirdOperand","term","tt1","isStringConstant","identifier1","position1","secondIdentifier","constantTypes","tokenBeforeBracket","listNode","distinctBeforeParameters","commaPositions","pos","parameter","Parser","escapeHtml","unsafe","dateToStringWithoutTime","date","twoDez","z","stringToDate","match","isDate","inputText","dateformat","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","ListofDays","lyear","isDateTime","splitStr","dateStr","isTime","timeformat","SQLMethodParameter","SQLMethod","isAggregating","returnType","_SQLMethodStore","countMethod","strftimeMethod","parameterType","SQLMethodStore","Column","table","isPrimaryKey","isNullable","defaultValue","isAutoIncrement","cs","regex1","typeMatch1","baseTypeIdentifier","commaSeparatedParameters","Table","ts","tsList","tables","columnStructureToColumnMap","referencedCs","referencedColumn","SymbolTable","parentSymbolTable","databaseStructure","symbol","list","shortestSymbolTableContainingPosition","shortestPosition","st1","symbolTable","symbols","SymbolResolver","databaseTool","_a","module","statement","astNode","resultTypes","resultTable","joinedTables","c1","whereType","whereSymbolTable","oldColumn","ciPos","createTableNode","thisTable","cn","tosNode","tableList","alias","firstOperand","typeLeft","typeRight","operandType","resultType1","selectTable","tableSymbols","methods","method","isCountMethod","operand","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","CompilerStatus","Compiler","main","moduleStore","t0","lexer","lexed","parser","symbolResolver","dt","message","_Module","file","path","uriCounter","monaco.Uri","that","versionId","main1","fromPosition","toPosition","hintKeywords","chList","sel","selStart","selEnd","stmt","b","bestCh","bestRangeLength","rangeLength","f","f1","workspace","ec","el","positionList","positionsOnLine","bestFoundPosition","e2","level1","level2","Module","ModuleStore","module_id","ms","mo","dirty","includeSystemModules","excludedModuleName","moduleName","SemicolonAngel","oldEvidence","time","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","monaco.Range","editor","selection","ActionManager","$mainElement","$element","jQuery","event","actionIdentifier","ae","keys","action","button","active","buttons","actionEntries","actionEntry","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","$input","ev","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","$item","$link","leftRight","xp","topBottom","yp","css","makeTabs","tabDiv","headings","tabs","target","tab","makeDiv","id","klass","div","jo_mouseDetected","checkIfMousePresent","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","obj","filename","isBlob","blob","fallbackCopyTextToClipboard","textArea","successful","err","copyTextToClipboard","getCookieValue","regex","_PerformanceCollector","url","startTime","pe","request","ajax","PerformanceCollector","csrfToken","successCallback","errorCallback","showNetworkBusy","headers","response","jqXHR","statusText","busy","ajaxAsync","data","exception","WDatabase","version","db","CacheManager","databaseId","callback","cache","buffer","templateDump","TemplateUploader","workspace_id","dump","reason","pako","_FileTool","fileData","signature","FileTool","PushClientStrategy","manager","PushClientLongPollingStrategy","timeMs","timeout","silently","PushClientWebsocketStrategy","msg","BasePushClientManager","baseURL","eventType","handler","messages","failedStrategy","oldStrategy","_PushClientManager","PushClientManager","NetworkManager","$updateTimerDiv","forceUpdate","$rect","sendIfNothingIsDirty","wdList","fdList","ws","oldWorkspaces","names","wd","owner_id","published_to","description","klasse","student_ids","callbackAfterSettingWorkspaceActive","statements","cacheManager","template","errormessage","workspaceId","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","newWorkspaceNames","remoteWorkspace","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","remoteFile","withSort","w","panelElement","createDb","SQL","arg","erg","__viteBrowserExternal","WorkerSim","initSqlJs","scriptDirectory","wasmUrl","SQL1","buff","config","row","done","DatabaseTool","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","workerUrl","errors","querySuccessCallback","queryErrorCallback","queryCount","execQuery","query","mainEmbedded","loadableDb","csrftoken","systemQueries","upperQuery","pattern","results","entries","sql","sql1","types","result1","tableNameToStructureMap","tableName","tableSQL","tableStructure","columnArray","foreignKeyList","size","columnArray1","notNull","dflt_value","enumValues","rs","regEx","columnStructure","fkInfo","foreignKeyInfo","sqliteMagicBytes","zlibMagicByte","DatabaseSettingsDialog","secret","$copyButton","n","newName","newDescription","database","ownerText","Workspace","withFiles","$buttonDiv","$button","DatabaseExplorer","$mainDiv","dbstructure","dbTool","$table","isCollapsed","$tableHeader","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","MyCompletionItemProvider","context","resolve","reject","wfc","textUntilPosition","textAfterPosition","completionHint","completionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","word","replaceWordRange","insertAfterCursorRange","item","textAfterDot","textBeforeDot","rangeToReplace","tableIdentifiers","columnIdentifier","insertText","columList","withTable","_b","snippet","label","tokenList","posMin","posMax","watchDog","posOld","MySignatureHelpProvider","methodCallPositions","methodCallPosition","rightMostPosition","mcp","parameterIndex","cp","signatureInformationList","_MyHoverProvider","errorList","desc","end","begin","MyHoverProvider","MyCodeActionProvider","range","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","defineVscSQL","conf","language","Helper","targetElement","direction","$helper","to","mainBase","Main","user","helperHistory","flag","Editor","showMinimap","isEmbedded","mouseWheelListener","insertEndOfComment","newLine","newColumn","prevLine","spacesAtBeginningOfLine","fontSizePx","editorfs","factor","dynamic","newEditorFs","monaco.KeyMod","monaco.KeyCode","ed","lineNumber","decorations","executeActionActive","sqlStatement","classname","HistoryViewer","$historyPanel","panelEntry","$div","$index","$text","$copybutton","$rollbackbutton","rollbackLocalNeeded","new_version","StatementCleaner","ast","statementHeader","lines","vline","pkc","uk","fkiString","collate","MySqlImporter","reader","zip.ZipReader","zip.HttpReader","zip.BlobReader","entry","zip.TextWriter","max","lexOutput","tmn","pcn","mci","mcn","fk","tableIdentifier","tableNode","statementCleaner","sqlStatements","DatabaseImportExport","ld","ab","NewDatabaseDialog","$templatelist_others","$templatelist_mine","myUserId","templatelist","t1","t2","tle","$tle","$templateName","$dropZone","evt","files","$dumpFileInput","createMode","workspaceData","$template","code","tIndex","projectExplorer","accordionElement","isDatabase","dbUncompressed","MainMenu","mainMenu","currentWorkspace","menu","level","noHoverKlass","subMenu","top","ProgramControlButtons","$buttonsContainer","am","_AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","pathArray","newElement","$collapseAllAction","fixed","enabled","selectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","isFolder","insertIndex","$elements","elementAtIndex","$accordionDiv","externalElement","$listOuter","$ce","$li","targetGrow","element1","expanded","aName","bName","cssClass","expandedCollapsed","pathHtml","$elementAction","$filedragpart","pathIsCollapsed","contextmenuHandler","contextMenuItems","cmi","pressTimer","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","folder","pathStart","pointPos","newText","oldName","oldPath","invokeCallback","scrollIntoView","ae1","pathString","elPath","ps","iconClass","AccordionPanel","Accordion","$html","panel","DistributeToStudentsDialog","classes","$studentList","student","$studentLine","$studentClass","$studentName","filterText","filterTextLowerCase","networkManager","ProjectExplorer","$projectexplorerDiv","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","title","$homeworkButtonDiv","$newWorkspaceAction","dest","droppedElement","dropEffekt","workspaceAccordionElement","moduleList","workspaceList","errorCountMap","errorCount","errorCountS","callbackAfterDatabaseFetched","nonSystemModules","cem","color","ResultsetPresenter","$bottomDiv","$exportCsvButton","resultTab","listener","inputs","inputRegex","count","hasDDLStatements","hasWriteStatements","sucessfullyExecutedModifyingStatements","new_statements","firstStatementIndex","modifyingStatements","statements_before","fromIndex","successfullyExecutedModifyingStatements","callback1","laterSelectExists","minimapColors","markers","errorlevel","linesDecorationsClassName","minimapColor","severity","monaco.MarkerSeverity","$runtimeErrorsTab","$runtimeErrorsTabHeading","$errorList","$errorLine","$sqlDiv","html","$messageDiv","columnTypes","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","from","waitFunction","$header","rows","typeIsBoolean","$row","cell","stringValue","monacoEditor","startOffset","fullText","searchStart","semicolonIndex","semicolonPos","RightDiv","$rightDiv","rightdiv_width","$wholeWindow","Sliders","md","dx","dy","sliderknobLeft","sliderknobRight","$editor","width","mewidth","height","meheight","$leftPanel","getUserDisplayName","lastNameFirst","TeacherExplorer","classData","ea","userDataList","ud","classDataList","cd","ViewModeController","mode","saveSettings","otherMode","viewModes","viewMode","settings","WaitOverlay","$waitDiv","AutoLogout","login","Dialog","colorStyle","placeholder","$buttonRow","$message","visible","visibility","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","$errorDiv","waitDiv","Login","singleUseToken","$loginSpinner","loginHappened","logoutRequest","loginRequest","errorMessage","NewNotifier","unregisterRequest","newStatements","firstNewStatementIndex","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","setCookie","seconds","expires","singleUseToken1","BottomDiv","classdata","workspaces","ErrorManager","$file","$error","locf","$errorDivs","$lineColumn","category","className","HomeworkManager","originalModel","modifiedModel","daysWithModules","dateString","dateWithoutTime","dwm","m1","m2","moduleWithWorkspace","DatabaseFetcher","urlWithoutProtocol","urlLowerCase","databaseIdentifier","EmbeddedFileExplorer","$fileListDiv","$filesDiv","$addButton","script","$fileDiv","syntaxMap","md1","markdownit","str","lang","tokens","idx","env","self","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","objectStoreScripts","scriptId","databaseID","IDEFileAccessImpl","SingleIDEAccessImpl","ide","_OnlineIDEAccessImpl","OnlineIDEAccessImpl","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","WriteQueryManager","indexedDB","statementsSql","gridUrl","MainEmbedded","scriptList","configJson","protocol","modules","scriptListJSon","countDown","oneNotSaved","$centerDiv","$codeResetModalWindow","$databaseResetModalWindow","$editorDiv","$controlsDiv","$bottomDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","$buttonSave","waitHtml","$parent","$window","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabs","$tabError","$tabPCode","$tabHistory","$thRun","initMonacoEditor","_workerId","jsonWorker","cssWorker","htmlWorker","tsWorker","editorWorker","EmbeddedStarter","$script","embeddedStarter"],"mappings":"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"}